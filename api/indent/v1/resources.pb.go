// Code generated by protoc-gen-go. DO NOT EDIT.
// source: indent/v1/resources.proto

package indentv1

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	v1 "go.indent.com/indent-go/api/indent/audit/v1"
	draft07 "go.indent.com/indent-go/api/indent/jsonschema/draft07"
	_ "go.indent.com/indent-go/api/indent/log"
	_ "go.indent.com/indent-go/api/indent/sql"
	v1alpha1 "google.golang.org/genproto/googleapis/api/expr/v1alpha1"
	expr "google.golang.org/genproto/googleapis/type/expr"
	structpb "google.golang.org/protobuf/types/known/structpb"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// TransformFormat is the encoding of the source.
type TransformFormat int32

const (
	TransformFormat_JSON TransformFormat = 0
	TransformFormat_CSV  TransformFormat = 1
)

var TransformFormat_name = map[int32]string{
	0: "JSON",
	1: "CSV",
}

var TransformFormat_value = map[string]int32{
	"JSON": 0,
	"CSV":  1,
}

func (x TransformFormat) String() string {
	return proto.EnumName(TransformFormat_name, int32(x))
}

func (TransformFormat) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{0}
}

// FieldType is the kind of data stored in a field.
type FieldType int32

const (
	FieldType_INVALID FieldType = 0
	// Numeric
	FieldType_TINYINT  FieldType = 1
	FieldType_SMALLINT FieldType = 2
	FieldType_INTEGER  FieldType = 3
	FieldType_BIGINT   FieldType = 4
	FieldType_FLOAT    FieldType = 5
	FieldType_DOUBLE   FieldType = 6
	FieldType_DECIMAL  FieldType = 7
	FieldType_NUMERIC  FieldType = 8
	// Date and time
	FieldType_TIMESTAMP FieldType = 21
	FieldType_DATE      FieldType = 22
	FieldType_INTERVAL  FieldType = 23
	// String
	FieldType_STRING  FieldType = 41
	FieldType_VARCHAR FieldType = 42
	FieldType_CHAR    FieldType = 43
	// Misc.
	FieldType_BOOLEAN FieldType = 61
	FieldType_BINARY  FieldType = 62
	// Complex
	FieldType_ARRAY     FieldType = 81
	FieldType_MAP       FieldType = 82
	FieldType_STRUCT    FieldType = 83
	FieldType_UNIONTYPE FieldType = 84
)

var FieldType_name = map[int32]string{
	0:  "INVALID",
	1:  "TINYINT",
	2:  "SMALLINT",
	3:  "INTEGER",
	4:  "BIGINT",
	5:  "FLOAT",
	6:  "DOUBLE",
	7:  "DECIMAL",
	8:  "NUMERIC",
	21: "TIMESTAMP",
	22: "DATE",
	23: "INTERVAL",
	41: "STRING",
	42: "VARCHAR",
	43: "CHAR",
	61: "BOOLEAN",
	62: "BINARY",
	81: "ARRAY",
	82: "MAP",
	83: "STRUCT",
	84: "UNIONTYPE",
}

var FieldType_value = map[string]int32{
	"INVALID":   0,
	"TINYINT":   1,
	"SMALLINT":  2,
	"INTEGER":   3,
	"BIGINT":    4,
	"FLOAT":     5,
	"DOUBLE":    6,
	"DECIMAL":   7,
	"NUMERIC":   8,
	"TIMESTAMP": 21,
	"DATE":      22,
	"INTERVAL":  23,
	"STRING":    41,
	"VARCHAR":   42,
	"CHAR":      43,
	"BOOLEAN":   61,
	"BINARY":    62,
	"ARRAY":     81,
	"MAP":       82,
	"STRUCT":    83,
	"UNIONTYPE": 84,
}

func (x FieldType) String() string {
	return proto.EnumName(FieldType_name, int32(x))
}

func (FieldType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{1}
}

// Binding associating a role with a set of members.
type Binding struct {
	// Role being assigned to the set of members.
	Role string `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	// Members being assigned a role.
	Members              []string `protobuf:"bytes,2,rep,name=members,proto3" json:"members,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Binding) Reset()         { *m = Binding{} }
func (m *Binding) String() string { return proto.CompactTextString(m) }
func (*Binding) ProtoMessage()    {}
func (*Binding) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{0}
}

func (m *Binding) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Binding.Unmarshal(m, b)
}
func (m *Binding) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Binding.Marshal(b, m, deterministic)
}
func (m *Binding) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Binding.Merge(m, src)
}
func (m *Binding) XXX_Size() int {
	return xxx_messageInfo_Binding.Size(m)
}
func (m *Binding) XXX_DiscardUnknown() {
	xxx_messageInfo_Binding.DiscardUnknown(m)
}

var xxx_messageInfo_Binding proto.InternalMessageInfo

func (m *Binding) GetRole() string {
	if m != nil {
		return m.Role
	}
	return ""
}

func (m *Binding) GetMembers() []string {
	if m != nil {
		return m.Members
	}
	return nil
}

// Block for organizing information within a space.
type Block struct {
	// Resource name of a Block.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Name of Space containing Block.
	SpaceName string `protobuf:"bytes,2,opt,name=space_name,json=spaceName,proto3" json:"space_name,omitempty"`
	// Text that should be shown to users to represent a Block.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Labels identifying attributes of a Block.
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// On specifies Triggers that allow a Block to be evaluated when specified conditions are met.
	On []*Trigger `protobuf:"bytes,7,rep,name=on,proto3" json:"on,omitempty"`
	// Props are properties that parameterize Blocks.
	Props *structpb.Struct `protobuf:"bytes,15,opt,name=props,proto3" json:"props,omitempty"`
	// Exec is the program that a Block is run with.
	Exec *Exec `protobuf:"bytes,20,opt,name=exec,proto3" json:"exec,omitempty"`
	// Spec defines how a Block is evaluated.
	Spec map[string]*SpecField `protobuf:"bytes,25,rep,name=spec,proto3" json:"spec,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// State resulting from evaluating a Block.
	State *structpb.Struct `protobuf:"bytes,30,opt,name=state,proto3" json:"state,omitempty"`
	// UI for displaying the Block.
	Ui                   *structpb.Struct `protobuf:"bytes,35,opt,name=ui,proto3" json:"ui,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *Block) Reset()         { *m = Block{} }
func (m *Block) String() string { return proto.CompactTextString(m) }
func (*Block) ProtoMessage()    {}
func (*Block) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{1}
}

func (m *Block) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Block.Unmarshal(m, b)
}
func (m *Block) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Block.Marshal(b, m, deterministic)
}
func (m *Block) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Block.Merge(m, src)
}
func (m *Block) XXX_Size() int {
	return xxx_messageInfo_Block.Size(m)
}
func (m *Block) XXX_DiscardUnknown() {
	xxx_messageInfo_Block.DiscardUnknown(m)
}

var xxx_messageInfo_Block proto.InternalMessageInfo

func (m *Block) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Block) GetSpaceName() string {
	if m != nil {
		return m.SpaceName
	}
	return ""
}

func (m *Block) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Block) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Block) GetOn() []*Trigger {
	if m != nil {
		return m.On
	}
	return nil
}

func (m *Block) GetProps() *structpb.Struct {
	if m != nil {
		return m.Props
	}
	return nil
}

func (m *Block) GetExec() *Exec {
	if m != nil {
		return m.Exec
	}
	return nil
}

func (m *Block) GetSpec() map[string]*SpecField {
	if m != nil {
		return m.Spec
	}
	return nil
}

func (m *Block) GetState() *structpb.Struct {
	if m != nil {
		return m.State
	}
	return nil
}

func (m *Block) GetUi() *structpb.Struct {
	if m != nil {
		return m.Ui
	}
	return nil
}

// Column contains the value and type of a column from a Result.
type Column struct {
	// Type contained in column.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Name of column.
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// TypeSignature describes the type of the column.
	TypeSignature        *structpb.Value `protobuf:"bytes,3,opt,name=type_signature,json=typeSignature,proto3" json:"type_signature,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Column) Reset()         { *m = Column{} }
func (m *Column) String() string { return proto.CompactTextString(m) }
func (*Column) ProtoMessage()    {}
func (*Column) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{2}
}

func (m *Column) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Column.Unmarshal(m, b)
}
func (m *Column) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Column.Marshal(b, m, deterministic)
}
func (m *Column) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Column.Merge(m, src)
}
func (m *Column) XXX_Size() int {
	return xxx_messageInfo_Column.Size(m)
}
func (m *Column) XXX_DiscardUnknown() {
	xxx_messageInfo_Column.DiscardUnknown(m)
}

var xxx_messageInfo_Column proto.InternalMessageInfo

func (m *Column) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *Column) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Column) GetTypeSignature() *structpb.Value {
	if m != nil {
		return m.TypeSignature
	}
	return nil
}

// Credential for performing actions with a Provider.
type Credential struct {
	// Name of the Credential.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Labels used to determine if a Credential is suitable.
	Labels map[string]string `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Materials used to authenticate. Each key must consist of alphanumeric
	// characters, '-', '_' or '.'. The serialized form of the secret data is a
	// base64 encoded string, representing the arbitrary (possibly non-string)
	// data value here. Described in https://tools.ietf.org/html/rfc4648#section-4
	// Data contained in the credential.
	Materials            map[string][]byte `protobuf:"bytes,3,rep,name=materials,proto3" json:"materials,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Credential) Reset()         { *m = Credential{} }
func (m *Credential) String() string { return proto.CompactTextString(m) }
func (*Credential) ProtoMessage()    {}
func (*Credential) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{3}
}

func (m *Credential) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Credential.Unmarshal(m, b)
}
func (m *Credential) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Credential.Marshal(b, m, deterministic)
}
func (m *Credential) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Credential.Merge(m, src)
}
func (m *Credential) XXX_Size() int {
	return xxx_messageInfo_Credential.Size(m)
}
func (m *Credential) XXX_DiscardUnknown() {
	xxx_messageInfo_Credential.DiscardUnknown(m)
}

var xxx_messageInfo_Credential proto.InternalMessageInfo

func (m *Credential) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Credential) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Credential) GetMaterials() map[string][]byte {
	if m != nil {
		return m.Materials
	}
	return nil
}

// Watch defines a Trigger on Block modifications.
type Watch struct {
	MatchLabels          map[string]string `protobuf:"bytes,10,rep,name=match_labels,json=matchLabels,proto3" json:"match_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Watch) Reset()         { *m = Watch{} }
func (m *Watch) String() string { return proto.CompactTextString(m) }
func (*Watch) ProtoMessage()    {}
func (*Watch) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{4}
}

func (m *Watch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Watch.Unmarshal(m, b)
}
func (m *Watch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Watch.Marshal(b, m, deterministic)
}
func (m *Watch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Watch.Merge(m, src)
}
func (m *Watch) XXX_Size() int {
	return xxx_messageInfo_Watch.Size(m)
}
func (m *Watch) XXX_DiscardUnknown() {
	xxx_messageInfo_Watch.DiscardUnknown(m)
}

var xxx_messageInfo_Watch proto.InternalMessageInfo

func (m *Watch) GetMatchLabels() map[string]string {
	if m != nil {
		return m.MatchLabels
	}
	return nil
}

// Error contains details about a failed request.
type Error struct {
	// Message containing failure text.
	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	// SQLState when the error occurred.
	SqlState string `protobuf:"bytes,2,opt,name=sql_state,json=sqlState,proto3" json:"sql_state,omitempty"`
	// ErrorCode of the failure.
	ErrorCode int64 `protobuf:"varint,3,opt,name=error_code,json=errorCode,proto3" json:"error_code,omitempty"`
	// ErrorName of the failure.
	ErrorName string `protobuf:"bytes,4,opt,name=error_name,json=errorName,proto3" json:"error_name,omitempty"`
	// ErrorType of the failure.
	ErrorType string `protobuf:"bytes,5,opt,name=error_type,json=errorType,proto3" json:"error_type,omitempty"`
	// ErrorLocation of the failure.
	ErrorLocation *ErrorLocation `protobuf:"bytes,6,opt,name=error_location,json=errorLocation,proto3" json:"error_location,omitempty"`
	// FailureInfo provides additional information about the failure.
	FailureInfo          *FailureInfo `protobuf:"bytes,7,opt,name=failure_info,json=failureInfo,proto3" json:"failure_info,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{5}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Error) GetSqlState() string {
	if m != nil {
		return m.SqlState
	}
	return ""
}

func (m *Error) GetErrorCode() int64 {
	if m != nil {
		return m.ErrorCode
	}
	return 0
}

func (m *Error) GetErrorName() string {
	if m != nil {
		return m.ErrorName
	}
	return ""
}

func (m *Error) GetErrorType() string {
	if m != nil {
		return m.ErrorType
	}
	return ""
}

func (m *Error) GetErrorLocation() *ErrorLocation {
	if m != nil {
		return m.ErrorLocation
	}
	return nil
}

func (m *Error) GetFailureInfo() *FailureInfo {
	if m != nil {
		return m.FailureInfo
	}
	return nil
}

// ErrorLocation describes the position in the query where an error was encountered.
type ErrorLocation struct {
	// LineNumber of error.
	LineNumber int64 `protobuf:"varint,1,opt,name=line_number,json=lineNumber,proto3" json:"line_number,omitempty"`
	// ColumnNumber of error.
	ColumnNumber         int64    `protobuf:"varint,2,opt,name=column_number,json=columnNumber,proto3" json:"column_number,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ErrorLocation) Reset()         { *m = ErrorLocation{} }
func (m *ErrorLocation) String() string { return proto.CompactTextString(m) }
func (*ErrorLocation) ProtoMessage()    {}
func (*ErrorLocation) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{6}
}

func (m *ErrorLocation) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ErrorLocation.Unmarshal(m, b)
}
func (m *ErrorLocation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ErrorLocation.Marshal(b, m, deterministic)
}
func (m *ErrorLocation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ErrorLocation.Merge(m, src)
}
func (m *ErrorLocation) XXX_Size() int {
	return xxx_messageInfo_ErrorLocation.Size(m)
}
func (m *ErrorLocation) XXX_DiscardUnknown() {
	xxx_messageInfo_ErrorLocation.DiscardUnknown(m)
}

var xxx_messageInfo_ErrorLocation proto.InternalMessageInfo

func (m *ErrorLocation) GetLineNumber() int64 {
	if m != nil {
		return m.LineNumber
	}
	return 0
}

func (m *ErrorLocation) GetColumnNumber() int64 {
	if m != nil {
		return m.ColumnNumber
	}
	return 0
}

// Exec specifies a program to be evaluated on the block.
type Exec struct {
	// Name of program being run.
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Exec) Reset()         { *m = Exec{} }
func (m *Exec) String() string { return proto.CompactTextString(m) }
func (*Exec) ProtoMessage()    {}
func (*Exec) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{7}
}

func (m *Exec) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Exec.Unmarshal(m, b)
}
func (m *Exec) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Exec.Marshal(b, m, deterministic)
}
func (m *Exec) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Exec.Merge(m, src)
}
func (m *Exec) XXX_Size() int {
	return xxx_messageInfo_Exec.Size(m)
}
func (m *Exec) XXX_DiscardUnknown() {
	xxx_messageInfo_Exec.DiscardUnknown(m)
}

var xxx_messageInfo_Exec proto.InternalMessageInfo

func (m *Exec) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// FailureInfo provides information related to a failure.
type FailureInfo struct {
	// Type of failure encountered.
	Type string `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	// Message related to the failure.
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	// Cause of the failure.
	Cause *FailureInfo `protobuf:"bytes,3,opt,name=cause,proto3" json:"cause,omitempty"`
	// Suppressed documents failures that didn't halt.
	Suppressed []*FailureInfo `protobuf:"bytes,4,rep,name=suppressed,proto3" json:"suppressed,omitempty"`
	// Stack provides a trace of the failure.
	Stack []string `protobuf:"bytes,5,rep,name=stack,proto3" json:"stack,omitempty"`
	// ErrorLocation of the failure.
	ErrorLocation        *ErrorLocation `protobuf:"bytes,6,opt,name=error_location,json=errorLocation,proto3" json:"error_location,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *FailureInfo) Reset()         { *m = FailureInfo{} }
func (m *FailureInfo) String() string { return proto.CompactTextString(m) }
func (*FailureInfo) ProtoMessage()    {}
func (*FailureInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{8}
}

func (m *FailureInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FailureInfo.Unmarshal(m, b)
}
func (m *FailureInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FailureInfo.Marshal(b, m, deterministic)
}
func (m *FailureInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FailureInfo.Merge(m, src)
}
func (m *FailureInfo) XXX_Size() int {
	return xxx_messageInfo_FailureInfo.Size(m)
}
func (m *FailureInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_FailureInfo.DiscardUnknown(m)
}

var xxx_messageInfo_FailureInfo proto.InternalMessageInfo

func (m *FailureInfo) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *FailureInfo) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *FailureInfo) GetCause() *FailureInfo {
	if m != nil {
		return m.Cause
	}
	return nil
}

func (m *FailureInfo) GetSuppressed() []*FailureInfo {
	if m != nil {
		return m.Suppressed
	}
	return nil
}

func (m *FailureInfo) GetStack() []string {
	if m != nil {
		return m.Stack
	}
	return nil
}

func (m *FailureInfo) GetErrorLocation() *ErrorLocation {
	if m != nil {
		return m.ErrorLocation
	}
	return nil
}

// SpecField defines what should be evaluated to produce a corresponding State field.
type SpecField struct {
	// Types that are valid to be assigned to Eval:
	//	*SpecField_Expr
	//	*SpecField_Val
	//	*SpecField_Block
	Eval                 isSpecField_Eval `protobuf_oneof:"eval"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *SpecField) Reset()         { *m = SpecField{} }
func (m *SpecField) String() string { return proto.CompactTextString(m) }
func (*SpecField) ProtoMessage()    {}
func (*SpecField) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{9}
}

func (m *SpecField) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SpecField.Unmarshal(m, b)
}
func (m *SpecField) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SpecField.Marshal(b, m, deterministic)
}
func (m *SpecField) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SpecField.Merge(m, src)
}
func (m *SpecField) XXX_Size() int {
	return xxx_messageInfo_SpecField.Size(m)
}
func (m *SpecField) XXX_DiscardUnknown() {
	xxx_messageInfo_SpecField.DiscardUnknown(m)
}

var xxx_messageInfo_SpecField proto.InternalMessageInfo

type isSpecField_Eval interface {
	isSpecField_Eval()
}

type SpecField_Expr struct {
	Expr string `protobuf:"bytes,1,opt,name=expr,proto3,oneof"`
}

type SpecField_Val struct {
	Val *structpb.Value `protobuf:"bytes,2,opt,name=val,proto3,oneof"`
}

type SpecField_Block struct {
	Block *Block `protobuf:"bytes,3,opt,name=block,proto3,oneof"`
}

func (*SpecField_Expr) isSpecField_Eval() {}

func (*SpecField_Val) isSpecField_Eval() {}

func (*SpecField_Block) isSpecField_Eval() {}

func (m *SpecField) GetEval() isSpecField_Eval {
	if m != nil {
		return m.Eval
	}
	return nil
}

func (m *SpecField) GetExpr() string {
	if x, ok := m.GetEval().(*SpecField_Expr); ok {
		return x.Expr
	}
	return ""
}

func (m *SpecField) GetVal() *structpb.Value {
	if x, ok := m.GetEval().(*SpecField_Val); ok {
		return x.Val
	}
	return nil
}

func (m *SpecField) GetBlock() *Block {
	if x, ok := m.GetEval().(*SpecField_Block); ok {
		return x.Block
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*SpecField) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*SpecField_Expr)(nil),
		(*SpecField_Val)(nil),
		(*SpecField_Block)(nil),
	}
}

// Storage contains the configuration required to query a table in Storage.
type Storage struct {
	// Temporary tables are deleted at the end of the session.
	Temporary bool `protobuf:"varint,1,opt,name=temporary,proto3" json:"temporary,omitempty"`
	// External indicates the table is read-only.
	External bool `protobuf:"varint,2,opt,name=external,proto3" json:"external,omitempty"`
	// DatabaseName is the database containing the table.
	DatabaseName string `protobuf:"bytes,3,opt,name=database_name,json=databaseName,proto3" json:"database_name,omitempty"`
	// TableName is used to reference a table in Storage. It is generated and only returned as output.
	TableName string `protobuf:"bytes,4,opt,name=table_name,json=tableName,proto3" json:"table_name,omitempty"`
	// Partitions containing the table's data.
	Partitions []*Field `protobuf:"bytes,10,rep,name=partitions,proto3" json:"partitions,omitempty"`
	// Format the table is written in, should be "ORC" or the Java package of SerDe to use (ie. org.apache.hive.hcatalog.data.JsonSerDe)
	Format string `protobuf:"bytes,20,opt,name=format,proto3" json:"format,omitempty"`
	// Location where a table is stored.
	Location string `protobuf:"bytes,30,opt,name=location,proto3" json:"location,omitempty"`
	// TableProperties dictate how a table is decoded.
	TableProperties map[string]string `protobuf:"bytes,31,rep,name=table_properties,json=tableProperties,proto3" json:"table_properties,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Sync options for Input to be copied to external storage.
	Sync                 *Sync    `protobuf:"bytes,40,opt,name=sync,proto3" json:"sync,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Storage) Reset()         { *m = Storage{} }
func (m *Storage) String() string { return proto.CompactTextString(m) }
func (*Storage) ProtoMessage()    {}
func (*Storage) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{10}
}

func (m *Storage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Storage.Unmarshal(m, b)
}
func (m *Storage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Storage.Marshal(b, m, deterministic)
}
func (m *Storage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Storage.Merge(m, src)
}
func (m *Storage) XXX_Size() int {
	return xxx_messageInfo_Storage.Size(m)
}
func (m *Storage) XXX_DiscardUnknown() {
	xxx_messageInfo_Storage.DiscardUnknown(m)
}

var xxx_messageInfo_Storage proto.InternalMessageInfo

func (m *Storage) GetTemporary() bool {
	if m != nil {
		return m.Temporary
	}
	return false
}

func (m *Storage) GetExternal() bool {
	if m != nil {
		return m.External
	}
	return false
}

func (m *Storage) GetDatabaseName() string {
	if m != nil {
		return m.DatabaseName
	}
	return ""
}

func (m *Storage) GetTableName() string {
	if m != nil {
		return m.TableName
	}
	return ""
}

func (m *Storage) GetPartitions() []*Field {
	if m != nil {
		return m.Partitions
	}
	return nil
}

func (m *Storage) GetFormat() string {
	if m != nil {
		return m.Format
	}
	return ""
}

func (m *Storage) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Storage) GetTableProperties() map[string]string {
	if m != nil {
		return m.TableProperties
	}
	return nil
}

func (m *Storage) GetSync() *Sync {
	if m != nil {
		return m.Sync
	}
	return nil
}

// Sync defines where the contents of an import should be copied.
type Sync struct {
	// Location is a URL that the Input should be sinked to. Supports gs:// and s3://.
	Location string `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	// Credential is the name of the credential that should be used write to location.
	Credential           string   `protobuf:"bytes,2,opt,name=credential,proto3" json:"credential,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Sync) Reset()         { *m = Sync{} }
func (m *Sync) String() string { return proto.CompactTextString(m) }
func (*Sync) ProtoMessage()    {}
func (*Sync) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{11}
}

func (m *Sync) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Sync.Unmarshal(m, b)
}
func (m *Sync) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Sync.Marshal(b, m, deterministic)
}
func (m *Sync) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Sync.Merge(m, src)
}
func (m *Sync) XXX_Size() int {
	return xxx_messageInfo_Sync.Size(m)
}
func (m *Sync) XXX_DiscardUnknown() {
	xxx_messageInfo_Sync.DiscardUnknown(m)
}

var xxx_messageInfo_Sync proto.InternalMessageInfo

func (m *Sync) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *Sync) GetCredential() string {
	if m != nil {
		return m.Credential
	}
	return ""
}

// JsonnetTransform executes a jsonnet program on each line of a file.
type JsonnetTransform struct {
	// Name of the program to be loaded. Only used if body is not provided.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Body of jsonnet program to run.
	Body                 []byte   `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JsonnetTransform) Reset()         { *m = JsonnetTransform{} }
func (m *JsonnetTransform) String() string { return proto.CompactTextString(m) }
func (*JsonnetTransform) ProtoMessage()    {}
func (*JsonnetTransform) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{12}
}

func (m *JsonnetTransform) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JsonnetTransform.Unmarshal(m, b)
}
func (m *JsonnetTransform) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JsonnetTransform.Marshal(b, m, deterministic)
}
func (m *JsonnetTransform) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JsonnetTransform.Merge(m, src)
}
func (m *JsonnetTransform) XXX_Size() int {
	return xxx_messageInfo_JsonnetTransform.Size(m)
}
func (m *JsonnetTransform) XXX_DiscardUnknown() {
	xxx_messageInfo_JsonnetTransform.DiscardUnknown(m)
}

var xxx_messageInfo_JsonnetTransform proto.InternalMessageInfo

func (m *JsonnetTransform) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *JsonnetTransform) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

// Lifecycle has conditions that are met across the lifecycle of a Block.
type Lifecycle struct {
	// Create occurs directly before a Block is created. It's result is persisted with the Block.
	Create bool `protobuf:"varint,1,opt,name=create,proto3" json:"create,omitempty"`
	// Delete occurs directly before a Block is deleted.
	Delete               bool     `protobuf:"varint,7,opt,name=delete,proto3" json:"delete,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Lifecycle) Reset()         { *m = Lifecycle{} }
func (m *Lifecycle) String() string { return proto.CompactTextString(m) }
func (*Lifecycle) ProtoMessage()    {}
func (*Lifecycle) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{13}
}

func (m *Lifecycle) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Lifecycle.Unmarshal(m, b)
}
func (m *Lifecycle) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Lifecycle.Marshal(b, m, deterministic)
}
func (m *Lifecycle) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Lifecycle.Merge(m, src)
}
func (m *Lifecycle) XXX_Size() int {
	return xxx_messageInfo_Lifecycle.Size(m)
}
func (m *Lifecycle) XXX_DiscardUnknown() {
	xxx_messageInfo_Lifecycle.DiscardUnknown(m)
}

var xxx_messageInfo_Lifecycle proto.InternalMessageInfo

func (m *Lifecycle) GetCreate() bool {
	if m != nil {
		return m.Create
	}
	return false
}

func (m *Lifecycle) GetDelete() bool {
	if m != nil {
		return m.Delete
	}
	return false
}

// Props parameterize the configuration of Blocks.
type Props struct {
	Contents             map[string]*structpb.Value `protobuf:"bytes,1,rep,name=contents,proto3" json:"contents,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *Props) Reset()         { *m = Props{} }
func (m *Props) String() string { return proto.CompactTextString(m) }
func (*Props) ProtoMessage()    {}
func (*Props) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{14}
}

func (m *Props) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Props.Unmarshal(m, b)
}
func (m *Props) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Props.Marshal(b, m, deterministic)
}
func (m *Props) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Props.Merge(m, src)
}
func (m *Props) XXX_Size() int {
	return xxx_messageInfo_Props.Size(m)
}
func (m *Props) XXX_DiscardUnknown() {
	xxx_messageInfo_Props.DiscardUnknown(m)
}

var xxx_messageInfo_Props proto.InternalMessageInfo

func (m *Props) GetContents() map[string]*structpb.Value {
	if m != nil {
		return m.Contents
	}
	return nil
}

// Query contains a message to be sent to a Provider.
type Query struct {
	Content              string   `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Query) Reset()         { *m = Query{} }
func (m *Query) String() string { return proto.CompactTextString(m) }
func (*Query) ProtoMessage()    {}
func (*Query) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{15}
}

func (m *Query) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Query.Unmarshal(m, b)
}
func (m *Query) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Query.Marshal(b, m, deterministic)
}
func (m *Query) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Query.Merge(m, src)
}
func (m *Query) XXX_Size() int {
	return xxx_messageInfo_Query.Size(m)
}
func (m *Query) XXX_DiscardUnknown() {
	xxx_messageInfo_Query.DiscardUnknown(m)
}

var xxx_messageInfo_Query proto.InternalMessageInfo

func (m *Query) GetContent() string {
	if m != nil {
		return m.Content
	}
	return ""
}

// ResolveOpts provides the configuration used to resolve Resources.
type ResolveOpts struct {
	// Labels used to resolve Resources in addition to Kind and either ID or Email.
	Labels               []string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResolveOpts) Reset()         { *m = ResolveOpts{} }
func (m *ResolveOpts) String() string { return proto.CompactTextString(m) }
func (*ResolveOpts) ProtoMessage()    {}
func (*ResolveOpts) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{16}
}

func (m *ResolveOpts) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResolveOpts.Unmarshal(m, b)
}
func (m *ResolveOpts) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResolveOpts.Marshal(b, m, deterministic)
}
func (m *ResolveOpts) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResolveOpts.Merge(m, src)
}
func (m *ResolveOpts) XXX_Size() int {
	return xxx_messageInfo_ResolveOpts.Size(m)
}
func (m *ResolveOpts) XXX_DiscardUnknown() {
	xxx_messageInfo_ResolveOpts.DiscardUnknown(m)
}

var xxx_messageInfo_ResolveOpts proto.InternalMessageInfo

func (m *ResolveOpts) GetLabels() []string {
	if m != nil {
		return m.Labels
	}
	return nil
}

// Result is the response to a query.
type Result struct {
	// Id of the returned result.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// InfoURI returns additional metadata about the query.
	InfoUri string `protobuf:"bytes,2,opt,name=info_uri,json=infoUri,proto3" json:"info_uri,omitempty"`
	// PartialCancelURI allows cancellation to be requested.
	PartialCancelUri string `protobuf:"bytes,3,opt,name=partial_cancel_uri,json=partialCancelUri,proto3" json:"partial_cancel_uri,omitempty"`
	// NextURI contains the next portion of the result.
	NextUri string `protobuf:"bytes,4,opt,name=next_uri,json=nextUri,proto3" json:"next_uri,omitempty"`
	// Columns contained in the result.
	Columns []*Column `protobuf:"bytes,5,rep,name=columns,proto3" json:"columns,omitempty"`
	// Data containing the result of running the query.
	Data []*structpb.Value `protobuf:"bytes,6,rep,name=data,proto3" json:"data,omitempty"`
	// Stats about the query execution.
	Stats *Stats `protobuf:"bytes,7,opt,name=stats,proto3" json:"stats,omitempty"`
	// Error documenting failure.
	Error *Error `protobuf:"bytes,8,opt,name=error,proto3" json:"error,omitempty"`
	// Warnings encountered during the query.
	Warnings []*Warning `protobuf:"bytes,9,rep,name=warnings,proto3" json:"warnings,omitempty"`
	// UpdateType describes the change between the last result.
	UpdateType string `protobuf:"bytes,10,opt,name=update_type,json=updateType,proto3" json:"update_type,omitempty"`
	// UpdateCount from last result.
	UpdateCount int64 `protobuf:"varint,11,opt,name=update_count,json=updateCount,proto3" json:"update_count,omitempty"`
	// Body containing the result of running the query.
	Body                 []*structpb.Value `protobuf:"bytes,30,rep,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Result) Reset()         { *m = Result{} }
func (m *Result) String() string { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()    {}
func (*Result) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{17}
}

func (m *Result) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Result.Unmarshal(m, b)
}
func (m *Result) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Result.Marshal(b, m, deterministic)
}
func (m *Result) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Result.Merge(m, src)
}
func (m *Result) XXX_Size() int {
	return xxx_messageInfo_Result.Size(m)
}
func (m *Result) XXX_DiscardUnknown() {
	xxx_messageInfo_Result.DiscardUnknown(m)
}

var xxx_messageInfo_Result proto.InternalMessageInfo

func (m *Result) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Result) GetInfoUri() string {
	if m != nil {
		return m.InfoUri
	}
	return ""
}

func (m *Result) GetPartialCancelUri() string {
	if m != nil {
		return m.PartialCancelUri
	}
	return ""
}

func (m *Result) GetNextUri() string {
	if m != nil {
		return m.NextUri
	}
	return ""
}

func (m *Result) GetColumns() []*Column {
	if m != nil {
		return m.Columns
	}
	return nil
}

func (m *Result) GetData() []*structpb.Value {
	if m != nil {
		return m.Data
	}
	return nil
}

func (m *Result) GetStats() *Stats {
	if m != nil {
		return m.Stats
	}
	return nil
}

func (m *Result) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Result) GetWarnings() []*Warning {
	if m != nil {
		return m.Warnings
	}
	return nil
}

func (m *Result) GetUpdateType() string {
	if m != nil {
		return m.UpdateType
	}
	return ""
}

func (m *Result) GetUpdateCount() int64 {
	if m != nil {
		return m.UpdateCount
	}
	return 0
}

func (m *Result) GetBody() []*structpb.Value {
	if m != nil {
		return m.Body
	}
	return nil
}

// Stats about the execution of a specific query.
type Stats struct {
	State                string          `protobuf:"bytes,1,opt,name=state,proto3" json:"state,omitempty"`
	Queued               bool            `protobuf:"varint,2,opt,name=queued,proto3" json:"queued,omitempty"`
	Scheduled            bool            `protobuf:"varint,3,opt,name=scheduled,proto3" json:"scheduled,omitempty"`
	Nodes                int32           `protobuf:"varint,4,opt,name=nodes,proto3" json:"nodes,omitempty"`
	TotalSplits          int32           `protobuf:"varint,5,opt,name=total_splits,json=totalSplits,proto3" json:"total_splits,omitempty"`
	QueuedSplits         int32           `protobuf:"varint,6,opt,name=queued_splits,json=queuedSplits,proto3" json:"queued_splits,omitempty"`
	RunningSplits        int32           `protobuf:"varint,7,opt,name=running_splits,json=runningSplits,proto3" json:"running_splits,omitempty"`
	CompletedSplits      int32           `protobuf:"varint,8,opt,name=completed_splits,json=completedSplits,proto3" json:"completed_splits,omitempty"`
	CpuTimeMillis        float32         `protobuf:"fixed32,9,opt,name=cpu_time_millis,json=cpuTimeMillis,proto3" json:"cpu_time_millis,omitempty"`
	WallTimeMillis       float32         `protobuf:"fixed32,10,opt,name=wall_time_millis,json=wallTimeMillis,proto3" json:"wall_time_millis,omitempty"`
	QueuedTimeMillis     float32         `protobuf:"fixed32,11,opt,name=queued_time_millis,json=queuedTimeMillis,proto3" json:"queued_time_millis,omitempty"`
	ElapsedTimeMillis    float32         `protobuf:"fixed32,12,opt,name=elapsed_time_millis,json=elapsedTimeMillis,proto3" json:"elapsed_time_millis,omitempty"`
	ProcessedRows        float32         `protobuf:"fixed32,13,opt,name=processed_rows,json=processedRows,proto3" json:"processed_rows,omitempty"`
	ProcessedBytes       float32         `protobuf:"fixed32,14,opt,name=processed_bytes,json=processedBytes,proto3" json:"processed_bytes,omitempty"`
	PeakMemoryBytes      float32         `protobuf:"fixed32,15,opt,name=peak_memory_bytes,json=peakMemoryBytes,proto3" json:"peak_memory_bytes,omitempty"`
	SpilledBytes         float32         `protobuf:"fixed32,16,opt,name=spilled_bytes,json=spilledBytes,proto3" json:"spilled_bytes,omitempty"`
	RootStage            *structpb.Value `protobuf:"bytes,17,opt,name=root_stage,json=rootStage,proto3" json:"root_stage,omitempty"`
	ProgressPercentage   float64         `protobuf:"fixed64,18,opt,name=progress_percentage,json=progressPercentage,proto3" json:"progress_percentage,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Stats) Reset()         { *m = Stats{} }
func (m *Stats) String() string { return proto.CompactTextString(m) }
func (*Stats) ProtoMessage()    {}
func (*Stats) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{18}
}

func (m *Stats) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Stats.Unmarshal(m, b)
}
func (m *Stats) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Stats.Marshal(b, m, deterministic)
}
func (m *Stats) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Stats.Merge(m, src)
}
func (m *Stats) XXX_Size() int {
	return xxx_messageInfo_Stats.Size(m)
}
func (m *Stats) XXX_DiscardUnknown() {
	xxx_messageInfo_Stats.DiscardUnknown(m)
}

var xxx_messageInfo_Stats proto.InternalMessageInfo

func (m *Stats) GetState() string {
	if m != nil {
		return m.State
	}
	return ""
}

func (m *Stats) GetQueued() bool {
	if m != nil {
		return m.Queued
	}
	return false
}

func (m *Stats) GetScheduled() bool {
	if m != nil {
		return m.Scheduled
	}
	return false
}

func (m *Stats) GetNodes() int32 {
	if m != nil {
		return m.Nodes
	}
	return 0
}

func (m *Stats) GetTotalSplits() int32 {
	if m != nil {
		return m.TotalSplits
	}
	return 0
}

func (m *Stats) GetQueuedSplits() int32 {
	if m != nil {
		return m.QueuedSplits
	}
	return 0
}

func (m *Stats) GetRunningSplits() int32 {
	if m != nil {
		return m.RunningSplits
	}
	return 0
}

func (m *Stats) GetCompletedSplits() int32 {
	if m != nil {
		return m.CompletedSplits
	}
	return 0
}

func (m *Stats) GetCpuTimeMillis() float32 {
	if m != nil {
		return m.CpuTimeMillis
	}
	return 0
}

func (m *Stats) GetWallTimeMillis() float32 {
	if m != nil {
		return m.WallTimeMillis
	}
	return 0
}

func (m *Stats) GetQueuedTimeMillis() float32 {
	if m != nil {
		return m.QueuedTimeMillis
	}
	return 0
}

func (m *Stats) GetElapsedTimeMillis() float32 {
	if m != nil {
		return m.ElapsedTimeMillis
	}
	return 0
}

func (m *Stats) GetProcessedRows() float32 {
	if m != nil {
		return m.ProcessedRows
	}
	return 0
}

func (m *Stats) GetProcessedBytes() float32 {
	if m != nil {
		return m.ProcessedBytes
	}
	return 0
}

func (m *Stats) GetPeakMemoryBytes() float32 {
	if m != nil {
		return m.PeakMemoryBytes
	}
	return 0
}

func (m *Stats) GetSpilledBytes() float32 {
	if m != nil {
		return m.SpilledBytes
	}
	return 0
}

func (m *Stats) GetRootStage() *structpb.Value {
	if m != nil {
		return m.RootStage
	}
	return nil
}

func (m *Stats) GetProgressPercentage() float64 {
	if m != nil {
		return m.ProgressPercentage
	}
	return 0
}

// Schema defines the data structure of Inputs and Outputs.
type Schema struct {
	// Version of the schema being used.
	Version string `protobuf:"bytes,1,opt,name=version,proto3" json:"version,omitempty"`
	// Fields contained within the Schema.
	Fields               []*Field `protobuf:"bytes,2,rep,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Schema) Reset()         { *m = Schema{} }
func (m *Schema) String() string { return proto.CompactTextString(m) }
func (*Schema) ProtoMessage()    {}
func (*Schema) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{19}
}

func (m *Schema) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Schema.Unmarshal(m, b)
}
func (m *Schema) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Schema.Marshal(b, m, deterministic)
}
func (m *Schema) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Schema.Merge(m, src)
}
func (m *Schema) XXX_Size() int {
	return xxx_messageInfo_Schema.Size(m)
}
func (m *Schema) XXX_DiscardUnknown() {
	xxx_messageInfo_Schema.DiscardUnknown(m)
}

var xxx_messageInfo_Schema proto.InternalMessageInfo

func (m *Schema) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Schema) GetFields() []*Field {
	if m != nil {
		return m.Fields
	}
	return nil
}

// Transform defines modifications to be performed before data is ready for querying.
type Transform struct {
	// Jsonnet program executed as Transform.
	Jsonnet              *JsonnetTransform `protobuf:"bytes,1,opt,name=jsonnet,proto3" json:"jsonnet,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *Transform) Reset()         { *m = Transform{} }
func (m *Transform) String() string { return proto.CompactTextString(m) }
func (*Transform) ProtoMessage()    {}
func (*Transform) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{20}
}

func (m *Transform) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Transform.Unmarshal(m, b)
}
func (m *Transform) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Transform.Marshal(b, m, deterministic)
}
func (m *Transform) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Transform.Merge(m, src)
}
func (m *Transform) XXX_Size() int {
	return xxx_messageInfo_Transform.Size(m)
}
func (m *Transform) XXX_DiscardUnknown() {
	xxx_messageInfo_Transform.DiscardUnknown(m)
}

var xxx_messageInfo_Transform proto.InternalMessageInfo

func (m *Transform) GetJsonnet() *JsonnetTransform {
	if m != nil {
		return m.Jsonnet
	}
	return nil
}

// Trigger describes conditions which when met cause a Block to be evaluated and have it's results sent to an Output.
type Trigger struct {
	Output string `protobuf:"bytes,1,opt,name=output,proto3" json:"output,omitempty"`
	// Types that are valid to be assigned to Condition:
	//	*Trigger_Lifecycle
	//	*Trigger_Cron
	//	*Trigger_Watch
	Condition            isTrigger_Condition `protobuf_oneof:"condition"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Trigger) Reset()         { *m = Trigger{} }
func (m *Trigger) String() string { return proto.CompactTextString(m) }
func (*Trigger) ProtoMessage()    {}
func (*Trigger) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{21}
}

func (m *Trigger) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Trigger.Unmarshal(m, b)
}
func (m *Trigger) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Trigger.Marshal(b, m, deterministic)
}
func (m *Trigger) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Trigger.Merge(m, src)
}
func (m *Trigger) XXX_Size() int {
	return xxx_messageInfo_Trigger.Size(m)
}
func (m *Trigger) XXX_DiscardUnknown() {
	xxx_messageInfo_Trigger.DiscardUnknown(m)
}

var xxx_messageInfo_Trigger proto.InternalMessageInfo

func (m *Trigger) GetOutput() string {
	if m != nil {
		return m.Output
	}
	return ""
}

type isTrigger_Condition interface {
	isTrigger_Condition()
}

type Trigger_Lifecycle struct {
	Lifecycle *Lifecycle `protobuf:"bytes,5,opt,name=lifecycle,proto3,oneof"`
}

type Trigger_Cron struct {
	Cron string `protobuf:"bytes,9,opt,name=cron,proto3,oneof"`
}

type Trigger_Watch struct {
	Watch *Watch `protobuf:"bytes,13,opt,name=watch,proto3,oneof"`
}

func (*Trigger_Lifecycle) isTrigger_Condition() {}

func (*Trigger_Cron) isTrigger_Condition() {}

func (*Trigger_Watch) isTrigger_Condition() {}

func (m *Trigger) GetCondition() isTrigger_Condition {
	if m != nil {
		return m.Condition
	}
	return nil
}

func (m *Trigger) GetLifecycle() *Lifecycle {
	if x, ok := m.GetCondition().(*Trigger_Lifecycle); ok {
		return x.Lifecycle
	}
	return nil
}

func (m *Trigger) GetCron() string {
	if x, ok := m.GetCondition().(*Trigger_Cron); ok {
		return x.Cron
	}
	return ""
}

func (m *Trigger) GetWatch() *Watch {
	if x, ok := m.GetCondition().(*Trigger_Watch); ok {
		return x.Watch
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*Trigger) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*Trigger_Lifecycle)(nil),
		(*Trigger_Cron)(nil),
		(*Trigger_Watch)(nil),
	}
}

// TransformStep is applied to prepare data for querying.
type TransformStep struct {
	// Source of the data being modified in the step.
	Source string `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	// Format of the source's encoding.
	Format TransformFormat `protobuf:"varint,2,opt,name=format,proto3,enum=indent.v1.TransformFormat" json:"format,omitempty"`
	// Transform is the action being applied.
	Transform            *Transform `protobuf:"bytes,3,opt,name=transform,proto3" json:"transform,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TransformStep) Reset()         { *m = TransformStep{} }
func (m *TransformStep) String() string { return proto.CompactTextString(m) }
func (*TransformStep) ProtoMessage()    {}
func (*TransformStep) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{22}
}

func (m *TransformStep) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TransformStep.Unmarshal(m, b)
}
func (m *TransformStep) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TransformStep.Marshal(b, m, deterministic)
}
func (m *TransformStep) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TransformStep.Merge(m, src)
}
func (m *TransformStep) XXX_Size() int {
	return xxx_messageInfo_TransformStep.Size(m)
}
func (m *TransformStep) XXX_DiscardUnknown() {
	xxx_messageInfo_TransformStep.DiscardUnknown(m)
}

var xxx_messageInfo_TransformStep proto.InternalMessageInfo

func (m *TransformStep) GetSource() string {
	if m != nil {
		return m.Source
	}
	return ""
}

func (m *TransformStep) GetFormat() TransformFormat {
	if m != nil {
		return m.Format
	}
	return TransformFormat_JSON
}

func (m *TransformStep) GetTransform() *Transform {
	if m != nil {
		return m.Transform
	}
	return nil
}

// Field represents a named member of a structure and it's type.
type Field struct {
	Name                 string    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	FieldType            FieldType `protobuf:"varint,2,opt,name=field_type,json=fieldType,proto3,enum=indent.v1.FieldType" json:"field_type,omitempty"`
	Array                *Field    `protobuf:"bytes,3,opt,name=array,proto3" json:"array,omitempty"`
	Fields               []*Field  `protobuf:"bytes,4,rep,name=fields,proto3" json:"fields,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Field) Reset()         { *m = Field{} }
func (m *Field) String() string { return proto.CompactTextString(m) }
func (*Field) ProtoMessage()    {}
func (*Field) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{23}
}

func (m *Field) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Field.Unmarshal(m, b)
}
func (m *Field) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Field.Marshal(b, m, deterministic)
}
func (m *Field) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Field.Merge(m, src)
}
func (m *Field) XXX_Size() int {
	return xxx_messageInfo_Field.Size(m)
}
func (m *Field) XXX_DiscardUnknown() {
	xxx_messageInfo_Field.DiscardUnknown(m)
}

var xxx_messageInfo_Field proto.InternalMessageInfo

func (m *Field) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Field) GetFieldType() FieldType {
	if m != nil {
		return m.FieldType
	}
	return FieldType_INVALID
}

func (m *Field) GetArray() *Field {
	if m != nil {
		return m.Array
	}
	return nil
}

func (m *Field) GetFields() []*Field {
	if m != nil {
		return m.Fields
	}
	return nil
}

// Form contains potentials interactions and their responses.
type Form struct {
	FormSchema           *draft07.JSONSchema `protobuf:"bytes,1,opt,name=form_schema,json=formSchema,proto3" json:"form_schema,omitempty"`
	UiSchema             *structpb.Struct    `protobuf:"bytes,2,opt,name=ui_schema,json=uiSchema,proto3" json:"ui_schema,omitempty"`
	FormData             *structpb.Struct    `protobuf:"bytes,3,opt,name=form_data,json=formData,proto3" json:"form_data,omitempty"`
	FormSchemaType       string              `protobuf:"bytes,4,opt,name=form_schema_type,json=formSchemaType,proto3" json:"form_schema_type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}            `json:"-"`
	XXX_unrecognized     []byte              `json:"-"`
	XXX_sizecache        int32               `json:"-"`
}

func (m *Form) Reset()         { *m = Form{} }
func (m *Form) String() string { return proto.CompactTextString(m) }
func (*Form) ProtoMessage()    {}
func (*Form) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{24}
}

func (m *Form) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Form.Unmarshal(m, b)
}
func (m *Form) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Form.Marshal(b, m, deterministic)
}
func (m *Form) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Form.Merge(m, src)
}
func (m *Form) XXX_Size() int {
	return xxx_messageInfo_Form.Size(m)
}
func (m *Form) XXX_DiscardUnknown() {
	xxx_messageInfo_Form.DiscardUnknown(m)
}

var xxx_messageInfo_Form proto.InternalMessageInfo

func (m *Form) GetFormSchema() *draft07.JSONSchema {
	if m != nil {
		return m.FormSchema
	}
	return nil
}

func (m *Form) GetUiSchema() *structpb.Struct {
	if m != nil {
		return m.UiSchema
	}
	return nil
}

func (m *Form) GetFormData() *structpb.Struct {
	if m != nil {
		return m.FormData
	}
	return nil
}

func (m *Form) GetFormSchemaType() string {
	if m != nil {
		return m.FormSchemaType
	}
	return ""
}

// Warning encountered during query execution.
type Warning struct {
	// WarningCode associated with the warning.
	WarningCode *WarningCode `protobuf:"bytes,1,opt,name=warning_code,json=warningCode,proto3" json:"warning_code,omitempty"`
	// Message containing the warning.
	Message              string   `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Warning) Reset()         { *m = Warning{} }
func (m *Warning) String() string { return proto.CompactTextString(m) }
func (*Warning) ProtoMessage()    {}
func (*Warning) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{25}
}

func (m *Warning) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Warning.Unmarshal(m, b)
}
func (m *Warning) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Warning.Marshal(b, m, deterministic)
}
func (m *Warning) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Warning.Merge(m, src)
}
func (m *Warning) XXX_Size() int {
	return xxx_messageInfo_Warning.Size(m)
}
func (m *Warning) XXX_DiscardUnknown() {
	xxx_messageInfo_Warning.DiscardUnknown(m)
}

var xxx_messageInfo_Warning proto.InternalMessageInfo

func (m *Warning) GetWarningCode() *WarningCode {
	if m != nil {
		return m.WarningCode
	}
	return nil
}

func (m *Warning) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

// WarningCode identifying the warning.
type WarningCode struct {
	// Code uniquely identifies the warning.
	Code int64 `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	// Name describing the warning.
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WarningCode) Reset()         { *m = WarningCode{} }
func (m *WarningCode) String() string { return proto.CompactTextString(m) }
func (*WarningCode) ProtoMessage()    {}
func (*WarningCode) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{26}
}

func (m *WarningCode) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WarningCode.Unmarshal(m, b)
}
func (m *WarningCode) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WarningCode.Marshal(b, m, deterministic)
}
func (m *WarningCode) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WarningCode.Merge(m, src)
}
func (m *WarningCode) XXX_Size() int {
	return xxx_messageInfo_WarningCode.Size(m)
}
func (m *WarningCode) XXX_DiscardUnknown() {
	xxx_messageInfo_WarningCode.DiscardUnknown(m)
}

var xxx_messageInfo_WarningCode proto.InternalMessageInfo

func (m *WarningCode) GetCode() int64 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *WarningCode) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// PolicyBase contains the fields shared between different types of policy.
type PolicyBase struct {
	// Selector defines what Policy should be applied to.
	Selector *Selector `protobuf:"bytes,5,opt,name=selector,proto3" json:"selector,omitempty"`
	// Conditions further refine when Policy is applied.
	Conditions []*expr.Expr `protobuf:"bytes,15,rep,name=conditions,proto3" json:"conditions,omitempty"`
	// CompiledConditions are compiled by Indent for user provided conditions. Can't be directly set.
	CompiledConditions   []*v1alpha1.CheckedExpr `protobuf:"bytes,18,rep,name=compiled_conditions,json=compiledConditions,proto3" json:"compiled_conditions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *PolicyBase) Reset()         { *m = PolicyBase{} }
func (m *PolicyBase) String() string { return proto.CompactTextString(m) }
func (*PolicyBase) ProtoMessage()    {}
func (*PolicyBase) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{27}
}

func (m *PolicyBase) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PolicyBase.Unmarshal(m, b)
}
func (m *PolicyBase) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PolicyBase.Marshal(b, m, deterministic)
}
func (m *PolicyBase) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PolicyBase.Merge(m, src)
}
func (m *PolicyBase) XXX_Size() int {
	return xxx_messageInfo_PolicyBase.Size(m)
}
func (m *PolicyBase) XXX_DiscardUnknown() {
	xxx_messageInfo_PolicyBase.DiscardUnknown(m)
}

var xxx_messageInfo_PolicyBase proto.InternalMessageInfo

func (m *PolicyBase) GetSelector() *Selector {
	if m != nil {
		return m.Selector
	}
	return nil
}

func (m *PolicyBase) GetConditions() []*expr.Expr {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *PolicyBase) GetCompiledConditions() []*v1alpha1.CheckedExpr {
	if m != nil {
		return m.CompiledConditions
	}
	return nil
}

// Selector defines criteria used to specify a set to be included using labels.
type Selector struct {
	// MatchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
	// map is equivalent to an element of matchExpressions, whose key field is "key", the
	// operator is "In", and the values array contains only "value". The requirements are ANDed.
	MatchLabels map[string]string `protobuf:"bytes,20,rep,name=match_labels,json=matchLabels,proto3" json:"match_labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// MatchExpressions is a list of label selector requirements. The requirements are ANDed.
	MatchExpressions     []*LabelSelectorRequirement `protobuf:"bytes,2,rep,name=match_expressions,json=matchExpressions,proto3" json:"match_expressions,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *Selector) Reset()         { *m = Selector{} }
func (m *Selector) String() string { return proto.CompactTextString(m) }
func (*Selector) ProtoMessage()    {}
func (*Selector) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{28}
}

func (m *Selector) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Selector.Unmarshal(m, b)
}
func (m *Selector) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Selector.Marshal(b, m, deterministic)
}
func (m *Selector) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Selector.Merge(m, src)
}
func (m *Selector) XXX_Size() int {
	return xxx_messageInfo_Selector.Size(m)
}
func (m *Selector) XXX_DiscardUnknown() {
	xxx_messageInfo_Selector.DiscardUnknown(m)
}

var xxx_messageInfo_Selector proto.InternalMessageInfo

func (m *Selector) GetMatchLabels() map[string]string {
	if m != nil {
		return m.MatchLabels
	}
	return nil
}

func (m *Selector) GetMatchExpressions() []*LabelSelectorRequirement {
	if m != nil {
		return m.MatchExpressions
	}
	return nil
}

// LabelSelectorRequirement is a selector that contains values, a key, and an operator that
// relates the key and values.
type LabelSelectorRequirement struct {
	// Key is the label key that the selector applies to.
	Key string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	// Operator represents a key's relationship to a set of values.
	// Valid operators are In, NotIn, Exists and DoesNotExist.
	Operator string `protobuf:"bytes,2,opt,name=operator,proto3" json:"operator,omitempty"`
	// Values is an array of string values. If the operator is In or NotIn,
	// the values array must be non-empty. If the operator is Exists or DoesNotExist,
	// the values array must be empty.
	Values               []string `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LabelSelectorRequirement) Reset()         { *m = LabelSelectorRequirement{} }
func (m *LabelSelectorRequirement) String() string { return proto.CompactTextString(m) }
func (*LabelSelectorRequirement) ProtoMessage()    {}
func (*LabelSelectorRequirement) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{29}
}

func (m *LabelSelectorRequirement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LabelSelectorRequirement.Unmarshal(m, b)
}
func (m *LabelSelectorRequirement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LabelSelectorRequirement.Marshal(b, m, deterministic)
}
func (m *LabelSelectorRequirement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LabelSelectorRequirement.Merge(m, src)
}
func (m *LabelSelectorRequirement) XXX_Size() int {
	return xxx_messageInfo_LabelSelectorRequirement.Size(m)
}
func (m *LabelSelectorRequirement) XXX_DiscardUnknown() {
	xxx_messageInfo_LabelSelectorRequirement.DiscardUnknown(m)
}

var xxx_messageInfo_LabelSelectorRequirement proto.InternalMessageInfo

func (m *LabelSelectorRequirement) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *LabelSelectorRequirement) GetOperator() string {
	if m != nil {
		return m.Operator
	}
	return ""
}

func (m *LabelSelectorRequirement) GetValues() []string {
	if m != nil {
		return m.Values
	}
	return nil
}

// Token allows authentication with Indent APIs.
type Token struct {
	// Meta contains the name and space of the token.
	Meta *v1.Meta `protobuf:"bytes,1,opt,name=meta,proto3" json:"meta,omitempty"`
	// ServiceAccount associated with the token.
	ServiceAccount string `protobuf:"bytes,2,opt,name=service_account,json=serviceAccount,proto3" json:"service_account,omitempty"`
	// ServiceAccountID is the unique number of the service account associated with the token.
	ServiceAccountId uint64 `protobuf:"varint,3,opt,name=service_account_id,json=serviceAccountId,proto3" json:"service_account_id,omitempty"`
	// CreatedBy is the actor that created the token.
	CreatedBy *v1.Resource `protobuf:"bytes,4,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	// AccessToken is sent with requests to authorize them.
	AccessToken string `protobuf:"bytes,5,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	// RefreshToken can be exchanged for new access tokens.
	RefreshToken string `protobuf:"bytes,6,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
	// Scope contains a list of space-delimited, case-sensitive scopes the token can access.
	Scope                string   `protobuf:"bytes,7,opt,name=scope,proto3" json:"scope,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Token) Reset()         { *m = Token{} }
func (m *Token) String() string { return proto.CompactTextString(m) }
func (*Token) ProtoMessage()    {}
func (*Token) Descriptor() ([]byte, []int) {
	return fileDescriptor_0aa62221f8342232, []int{30}
}

func (m *Token) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Token.Unmarshal(m, b)
}
func (m *Token) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Token.Marshal(b, m, deterministic)
}
func (m *Token) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Token.Merge(m, src)
}
func (m *Token) XXX_Size() int {
	return xxx_messageInfo_Token.Size(m)
}
func (m *Token) XXX_DiscardUnknown() {
	xxx_messageInfo_Token.DiscardUnknown(m)
}

var xxx_messageInfo_Token proto.InternalMessageInfo

func (m *Token) GetMeta() *v1.Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *Token) GetServiceAccount() string {
	if m != nil {
		return m.ServiceAccount
	}
	return ""
}

func (m *Token) GetServiceAccountId() uint64 {
	if m != nil {
		return m.ServiceAccountId
	}
	return 0
}

func (m *Token) GetCreatedBy() *v1.Resource {
	if m != nil {
		return m.CreatedBy
	}
	return nil
}

func (m *Token) GetAccessToken() string {
	if m != nil {
		return m.AccessToken
	}
	return ""
}

func (m *Token) GetRefreshToken() string {
	if m != nil {
		return m.RefreshToken
	}
	return ""
}

func (m *Token) GetScope() string {
	if m != nil {
		return m.Scope
	}
	return ""
}

func init() {
	proto.RegisterEnum("indent.v1.TransformFormat", TransformFormat_name, TransformFormat_value)
	proto.RegisterEnum("indent.v1.FieldType", FieldType_name, FieldType_value)
	proto.RegisterType((*Binding)(nil), "indent.v1.Binding")
	proto.RegisterType((*Block)(nil), "indent.v1.Block")
	proto.RegisterMapType((map[string]string)(nil), "indent.v1.Block.LabelsEntry")
	proto.RegisterMapType((map[string]*SpecField)(nil), "indent.v1.Block.SpecEntry")
	proto.RegisterType((*Column)(nil), "indent.v1.Column")
	proto.RegisterType((*Credential)(nil), "indent.v1.Credential")
	proto.RegisterMapType((map[string]string)(nil), "indent.v1.Credential.LabelsEntry")
	proto.RegisterMapType((map[string][]byte)(nil), "indent.v1.Credential.MaterialsEntry")
	proto.RegisterType((*Watch)(nil), "indent.v1.Watch")
	proto.RegisterMapType((map[string]string)(nil), "indent.v1.Watch.MatchLabelsEntry")
	proto.RegisterType((*Error)(nil), "indent.v1.Error")
	proto.RegisterType((*ErrorLocation)(nil), "indent.v1.ErrorLocation")
	proto.RegisterType((*Exec)(nil), "indent.v1.Exec")
	proto.RegisterType((*FailureInfo)(nil), "indent.v1.FailureInfo")
	proto.RegisterType((*SpecField)(nil), "indent.v1.SpecField")
	proto.RegisterType((*Storage)(nil), "indent.v1.Storage")
	proto.RegisterMapType((map[string]string)(nil), "indent.v1.Storage.TablePropertiesEntry")
	proto.RegisterType((*Sync)(nil), "indent.v1.Sync")
	proto.RegisterType((*JsonnetTransform)(nil), "indent.v1.JsonnetTransform")
	proto.RegisterType((*Lifecycle)(nil), "indent.v1.Lifecycle")
	proto.RegisterType((*Props)(nil), "indent.v1.Props")
	proto.RegisterMapType((map[string]*structpb.Value)(nil), "indent.v1.Props.ContentsEntry")
	proto.RegisterType((*Query)(nil), "indent.v1.Query")
	proto.RegisterType((*ResolveOpts)(nil), "indent.v1.ResolveOpts")
	proto.RegisterType((*Result)(nil), "indent.v1.Result")
	proto.RegisterType((*Stats)(nil), "indent.v1.Stats")
	proto.RegisterType((*Schema)(nil), "indent.v1.Schema")
	proto.RegisterType((*Transform)(nil), "indent.v1.Transform")
	proto.RegisterType((*Trigger)(nil), "indent.v1.Trigger")
	proto.RegisterType((*TransformStep)(nil), "indent.v1.TransformStep")
	proto.RegisterType((*Field)(nil), "indent.v1.Field")
	proto.RegisterType((*Form)(nil), "indent.v1.Form")
	proto.RegisterType((*Warning)(nil), "indent.v1.Warning")
	proto.RegisterType((*WarningCode)(nil), "indent.v1.WarningCode")
	proto.RegisterType((*PolicyBase)(nil), "indent.v1.PolicyBase")
	proto.RegisterType((*Selector)(nil), "indent.v1.Selector")
	proto.RegisterMapType((map[string]string)(nil), "indent.v1.Selector.MatchLabelsEntry")
	proto.RegisterType((*LabelSelectorRequirement)(nil), "indent.v1.LabelSelectorRequirement")
	proto.RegisterType((*Token)(nil), "indent.v1.Token")
}

func init() {
	proto.RegisterFile("indent/v1/resources.proto", fileDescriptor_0aa62221f8342232)
}

var fileDescriptor_0aa62221f8342232 = []byte{
	// 2755 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x59, 0xcd, 0x72, 0x1b, 0xc7,
	0xf1, 0x17, 0x3e, 0x89, 0x6d, 0x10, 0xe4, 0x6a, 0x44, 0xcb, 0x2b, 0xda, 0x7f, 0x51, 0x5e, 0x5a,
	0x16, 0x4d, 0xcb, 0xe0, 0x87, 0xbf, 0xfe, 0x96, 0x63, 0xa7, 0x00, 0x10, 0x92, 0xe0, 0x22, 0x41,
	0x7a, 0x00, 0xd1, 0x56, 0x2a, 0x15, 0x64, 0xb9, 0x18, 0x52, 0x6b, 0x2d, 0x76, 0x57, 0x3b, 0xbb,
	0x94, 0x70, 0x4a, 0x55, 0xee, 0x29, 0x1f, 0xe3, 0xca, 0x29, 0xe5, 0xca, 0xc9, 0x97, 0xbc, 0x40,
	0x2e, 0x72, 0x55, 0x52, 0xa9, 0x3c, 0x41, 0x1e, 0x20, 0xb9, 0xe4, 0x09, 0x52, 0x3e, 0xa5, 0x7a,
	0x66, 0x76, 0xb1, 0x20, 0x21, 0xa9, 0x5c, 0x3a, 0xa0, 0x6a, 0xbb, 0xfb, 0xd7, 0x3d, 0x3d, 0x3d,
	0x3d, 0xdd, 0x33, 0x03, 0xb8, 0xe2, 0x78, 0x43, 0xe6, 0x45, 0x1b, 0xa7, 0x5b, 0x1b, 0x21, 0xe3,
	0x7e, 0x1c, 0xda, 0x8c, 0xd7, 0x83, 0xd0, 0x8f, 0x7c, 0xa2, 0x49, 0x51, 0xfd, 0x74, 0x6b, 0xf9,
	0xad, 0x13, 0xdf, 0x3f, 0x71, 0xd9, 0x86, 0x15, 0x38, 0x1b, 0xec, 0x49, 0x10, 0x6e, 0x9c, 0x6e,
	0x59, 0x6e, 0xf0, 0xc0, 0xda, 0xda, 0xb0, 0x1f, 0x30, 0xfb, 0x21, 0x1b, 0x4a, 0x95, 0xe5, 0xd7,
	0x15, 0x4e, 0x50, 0x47, 0xf1, 0xf1, 0x06, 0x8f, 0xc2, 0xd8, 0x8e, 0x94, 0xf4, 0xb2, 0x92, 0x46,
	0xe3, 0x80, 0x09, 0x33, 0x8a, 0xbf, 0xae, 0x7c, 0xf8, 0x9a, 0xfb, 0x1e, 0xb7, 0x1f, 0xb0, 0x91,
	0xb5, 0x31, 0x0c, 0xad, 0xe3, 0x68, 0xf3, 0xa3, 0x0c, 0x4b, 0x61, 0x57, 0x14, 0xd6, 0x8a, 0x87,
	0xce, 0x2c, 0xaf, 0x97, 0x97, 0x14, 0xc0, 0xf5, 0x4f, 0xf0, 0x77, 0x86, 0xcb, 0x1f, 0xb9, 0xf8,
	0x93, 0x5c, 0xf3, 0x23, 0x98, 0x6b, 0x3a, 0xde, 0xd0, 0xf1, 0x4e, 0x08, 0x81, 0x62, 0xe8, 0xbb,
	0xcc, 0xc8, 0x5d, 0xcb, 0xad, 0x69, 0x54, 0x7c, 0x13, 0x03, 0xe6, 0x46, 0x6c, 0x74, 0xc4, 0x42,
	0x6e, 0xe4, 0xaf, 0x15, 0xd6, 0x34, 0x9a, 0x90, 0xe6, 0x9f, 0x8b, 0x50, 0x6a, 0xba, 0xbe, 0xfd,
	0x90, 0x18, 0x50, 0xf4, 0xac, 0x91, 0xd2, 0x6b, 0x16, 0xff, 0xf9, 0xc3, 0x4a, 0x8e, 0x0a, 0x0e,
	0x59, 0x05, 0xe0, 0x81, 0x65, 0xb3, 0x81, 0x90, 0xe7, 0x33, 0x72, 0x4d, 0xf0, 0xbb, 0x08, 0xba,
	0x01, 0xf3, 0x43, 0x87, 0x07, 0xae, 0x35, 0x96, 0xb0, 0x42, 0x06, 0x56, 0x55, 0x12, 0x01, 0x7c,
	0x1f, 0xca, 0xae, 0x75, 0xc4, 0x5c, 0x6e, 0x14, 0xaf, 0x15, 0xd6, 0xaa, 0xdb, 0xaf, 0xd7, 0xd3,
	0xd5, 0xa9, 0x0b, 0x4f, 0xea, 0xbb, 0x42, 0xdc, 0xf6, 0xa2, 0x70, 0x4c, 0x15, 0x96, 0x98, 0x90,
	0xf7, 0x3d, 0x63, 0x4e, 0x68, 0x90, 0x8c, 0x46, 0x3f, 0x74, 0x4e, 0x4e, 0x58, 0x48, 0xf3, 0xbe,
	0x47, 0xde, 0x85, 0x52, 0x10, 0xfa, 0x01, 0x37, 0x16, 0xaf, 0xe5, 0xd6, 0xaa, 0xdb, 0xaf, 0xd6,
	0xe5, 0x2a, 0xd5, 0x93, 0x35, 0xac, 0xf7, 0xc4, 0x1a, 0x52, 0x89, 0x22, 0xab, 0x50, 0x64, 0x4f,
	0x98, 0x6d, 0x2c, 0x09, 0xf4, 0x62, 0xc6, 0x68, 0xfb, 0x09, 0xb3, 0xa9, 0x10, 0x92, 0x3a, 0x14,
	0x79, 0xc0, 0x6c, 0xe3, 0x8a, 0x18, 0x79, 0xf9, 0x9c, 0xaf, 0xbd, 0x80, 0xd9, 0xd2, 0x53, 0x81,
	0x43, 0x1f, 0x78, 0x64, 0x45, 0xcc, 0xb8, 0xfa, 0x02, 0x1f, 0x04, 0x8a, 0xdc, 0x80, 0x7c, 0xec,
	0x18, 0xab, 0xcf, 0xc7, 0xe6, 0x63, 0x67, 0xf9, 0x63, 0xa8, 0x66, 0xc2, 0x42, 0x74, 0x28, 0x3c,
	0x64, 0x63, 0xb5, 0xc6, 0xf8, 0x49, 0x96, 0xa0, 0x74, 0x6a, 0xb9, 0xb1, 0x5a, 0x1f, 0x2a, 0x89,
	0x5b, 0xf9, 0xff, 0xcf, 0x2d, 0xef, 0x81, 0x96, 0x7a, 0x39, 0x43, 0x71, 0x3d, 0xab, 0x58, 0xdd,
	0x5e, 0xca, 0x4c, 0x11, 0xd5, 0x6e, 0x3b, 0xcc, 0x1d, 0x66, 0xcc, 0x99, 0x3e, 0x94, 0x5b, 0xbe,
	0x1b, 0x8f, 0x3c, 0xcc, 0x34, 0xdc, 0x00, 0x49, 0xa6, 0xe1, 0x37, 0xf2, 0x26, 0x59, 0xa2, 0xf2,
	0xe7, 0x53, 0x58, 0x40, 0xd9, 0x80, 0x3b, 0x27, 0x9e, 0x15, 0xc5, 0xa1, 0x4c, 0x8e, 0xea, 0xf6,
	0xe5, 0x73, 0x13, 0x3e, 0xc4, 0x51, 0x68, 0x0d, 0xd1, 0xbd, 0x04, 0x6c, 0x7e, 0x9b, 0x07, 0x68,
	0x85, 0x0c, 0x9d, 0x72, 0x2c, 0x37, 0x1d, 0x21, 0x97, 0x19, 0xe1, 0xe3, 0x34, 0xa7, 0xf2, 0x62,
	0x9d, 0xde, 0xc8, 0x4c, 0x62, 0xa2, 0x3a, 0x33, 0xb1, 0x9a, 0xa0, 0x8d, 0xac, 0x88, 0x85, 0x8e,
	0xe5, 0x72, 0xa3, 0x20, 0xb4, 0xdf, 0x9c, 0xad, 0xbd, 0x97, 0xc0, 0xa4, 0x81, 0x89, 0xda, 0xcb,
	0x2c, 0xce, 0xcf, 0x60, 0x61, 0xda, 0xee, 0x8b, 0xb4, 0xe7, 0xb3, 0x6b, 0xf1, 0xbb, 0x1c, 0x94,
	0xbe, 0xb4, 0x22, 0xfb, 0x01, 0xd9, 0x81, 0xf9, 0x11, 0x7e, 0x0c, 0x54, 0x1c, 0xe0, 0x5c, 0x1c,
	0x04, 0x0e, 0x27, 0x61, 0x3f, 0xc8, 0xc6, 0xa1, 0x3a, 0x9a, 0x70, 0x96, 0x3f, 0x03, 0xfd, 0x2c,
	0xe0, 0xa7, 0xcc, 0xc6, 0xfc, 0x7d, 0x1e, 0x4a, 0xed, 0x30, 0xf4, 0x43, 0x59, 0x71, 0x38, 0xb7,
	0x4e, 0x92, 0x85, 0x4a, 0x48, 0xf2, 0x1a, 0x68, 0xfc, 0x91, 0x3b, 0x90, 0xbb, 0x44, 0x5a, 0xa8,
	0xf0, 0x47, 0x6e, 0x4f, 0xec, 0x87, 0xff, 0x03, 0x60, 0xa8, 0x3f, 0xb0, 0xfd, 0xa1, 0x4c, 0x93,
	0x02, 0xd5, 0x04, 0xa7, 0xe5, 0x0f, 0x33, 0x62, 0x91, 0x01, 0x45, 0xa1, 0x2c, 0xc5, 0xa2, 0xb4,
	0xa4, 0x62, 0x91, 0x96, 0xa5, 0x8c, 0xb8, 0x8f, 0xb9, 0xf9, 0x73, 0x58, 0x90, 0x62, 0xd7, 0xb7,
	0xad, 0xc8, 0xf1, 0x3d, 0xa3, 0x2c, 0xf2, 0xd0, 0xc8, 0x6e, 0x7d, 0x04, 0xec, 0x2a, 0x39, 0xad,
	0xb1, 0x2c, 0x49, 0x3e, 0x86, 0xf9, 0x63, 0xcb, 0x71, 0xe3, 0x90, 0x0d, 0x1c, 0xef, 0xd8, 0x37,
	0xe6, 0x54, 0x1a, 0x4f, 0xd4, 0x6f, 0x4b, 0x71, 0xc7, 0x3b, 0xf6, 0x69, 0xf5, 0x78, 0x42, 0x98,
	0xf7, 0xa0, 0x36, 0x65, 0x9a, 0xac, 0x40, 0xd5, 0x75, 0x3c, 0x36, 0xf0, 0x62, 0x2c, 0xc4, 0x22,
	0x48, 0x05, 0x0a, 0xc8, 0xea, 0x0a, 0x0e, 0x59, 0x85, 0x9a, 0x2d, 0xf6, 0x59, 0x02, 0xc9, 0x0b,
	0xc8, 0xbc, 0x64, 0x4a, 0x90, 0xb9, 0x0c, 0x45, 0x2c, 0x56, 0xb3, 0x36, 0x85, 0xf9, 0xdf, 0x1c,
	0x54, 0x33, 0xfe, 0xcc, 0xdc, 0xae, 0x99, 0x65, 0xca, 0x4f, 0x2f, 0xd3, 0x4d, 0x28, 0xd9, 0x56,
	0xcc, 0x27, 0x7b, 0x75, 0xf6, 0x24, 0x25, 0x88, 0x7c, 0x08, 0xc0, 0xe3, 0x20, 0x08, 0x19, 0xe7,
	0x6c, 0xa8, 0x0a, 0xfb, 0xb3, 0x54, 0x32, 0x48, 0x4c, 0x25, 0x1e, 0x59, 0xf6, 0x43, 0xa3, 0x24,
	0xda, 0x92, 0x24, 0x5e, 0x7a, 0xa1, 0xcc, 0xdf, 0xc8, 0x92, 0x27, 0x6a, 0x17, 0x59, 0xc2, 0x3a,
	0x1f, 0xc8, 0x10, 0x6b, 0x77, 0x2f, 0x50, 0x41, 0x91, 0x75, 0x28, 0x9c, 0x5a, 0xae, 0x2a, 0x7a,
	0xcf, 0xa8, 0x44, 0x77, 0x2f, 0x50, 0x04, 0x91, 0x35, 0x28, 0x1d, 0x61, 0xb5, 0x57, 0xb1, 0xd0,
	0xcf, 0x76, 0x81, 0xbb, 0x17, 0xa8, 0x04, 0x34, 0xcb, 0x50, 0x64, 0xa7, 0x96, 0x6b, 0x7e, 0x5f,
	0x80, 0xb9, 0x5e, 0xe4, 0x87, 0x18, 0xc9, 0xd7, 0x41, 0x8b, 0xd8, 0x28, 0xf0, 0x43, 0x2b, 0x94,
	0xdb, 0xa8, 0x42, 0x27, 0x0c, 0xb2, 0x0c, 0x15, 0xf6, 0x24, 0x62, 0xa1, 0xa7, 0x9c, 0xa9, 0xd0,
	0x94, 0xc6, 0x14, 0x18, 0x5a, 0x91, 0x75, 0x64, 0x71, 0x96, 0x69, 0xaa, 0x74, 0x3e, 0x61, 0x26,
	0x49, 0x1f, 0x59, 0x47, 0x2e, 0x9b, 0xda, 0x13, 0x82, 0x23, 0xc4, 0x9b, 0x00, 0x81, 0x15, 0x46,
	0x0e, 0xc6, 0x25, 0x29, 0x0b, 0xd9, 0x09, 0xc8, 0xfa, 0x9e, 0xc1, 0x90, 0xcb, 0x50, 0x3e, 0xf6,
	0xc3, 0x91, 0x15, 0x89, 0xce, 0xa8, 0x51, 0x45, 0xa1, 0xa7, 0xe9, 0x7a, 0x5c, 0x95, 0xfb, 0x36,
	0xa1, 0x09, 0x05, 0x5d, 0x3a, 0x81, 0xad, 0x95, 0x85, 0x91, 0xc3, 0xb8, 0xb1, 0x22, 0xc6, 0xba,
	0x91, 0xed, 0x27, 0x32, 0x22, 0xf5, 0x3e, 0x42, 0x0f, 0x52, 0xa4, 0x2c, 0x44, 0x8b, 0xd1, 0x34,
	0x17, 0xfb, 0x33, 0x1f, 0x7b, 0xb6, 0xb1, 0x76, 0xae, 0x3f, 0xf7, 0xc6, 0x9e, 0x4d, 0x85, 0x70,
	0xb9, 0x09, 0x4b, 0xb3, 0xac, 0xfd, 0xa4, 0xaa, 0xd5, 0x84, 0x22, 0x5a, 0x9c, 0x9a, 0x60, 0xee,
	0xcc, 0x04, 0xaf, 0x02, 0xd8, 0x69, 0x2b, 0x50, 0x26, 0x32, 0x1c, 0xf3, 0x16, 0xe8, 0x9f, 0x73,
	0xdf, 0xf3, 0x58, 0xd4, 0x0f, 0x2d, 0x8f, 0x63, 0xc8, 0x66, 0x76, 0x2a, 0x02, 0xc5, 0x23, 0x7f,
	0x38, 0x56, 0xa5, 0x5c, 0x7c, 0x9b, 0x9f, 0x80, 0xb6, 0xeb, 0x1c, 0x33, 0x7b, 0x6c, 0xbb, 0x0c,
	0xa3, 0x6f, 0x87, 0x0c, 0x6b, 0xa3, 0x4c, 0x15, 0x45, 0x21, 0x7f, 0xc8, 0x5c, 0x16, 0x31, 0x51,
	0x75, 0x2a, 0x54, 0x51, 0xe6, 0xb7, 0x39, 0x28, 0x1d, 0x88, 0xf3, 0xcc, 0x2d, 0xa8, 0xd8, 0xbe,
	0x17, 0x31, 0x2f, 0xe2, 0x46, 0x4e, 0xc4, 0xfe, 0x6a, 0x26, 0x66, 0x02, 0x53, 0x6f, 0x29, 0x80,
	0x0c, 0x79, 0x8a, 0x5f, 0xee, 0x41, 0x6d, 0x4a, 0x34, 0x23, 0x7e, 0x37, 0xa7, 0xcf, 0x09, 0xcf,
	0x6a, 0xde, 0x99, 0xb8, 0xbe, 0x01, 0xa5, 0x2f, 0x62, 0x16, 0x8e, 0xb1, 0xca, 0xa8, 0x91, 0x92,
	0x66, 0xa0, 0x48, 0xf3, 0x3a, 0x54, 0x29, 0xe3, 0xbe, 0x7b, 0xca, 0xf6, 0x83, 0x48, 0xa4, 0x9e,
	0xea, 0x5f, 0xb2, 0x1e, 0x28, 0xca, 0xfc, 0x6b, 0x01, 0xca, 0x94, 0xf1, 0xd8, 0x8d, 0xc8, 0x02,
	0xe4, 0x9d, 0xa1, 0x32, 0x93, 0x77, 0x86, 0xe4, 0x0a, 0x54, 0xb0, 0x16, 0x0f, 0xe2, 0xd0, 0x49,
	0x4a, 0x18, 0xd2, 0xf7, 0x42, 0x87, 0xdc, 0x04, 0x22, 0xd2, 0xda, 0x72, 0x07, 0xb6, 0xe5, 0xd9,
	0xcc, 0x15, 0x20, 0xb9, 0x87, 0x74, 0x25, 0x69, 0x09, 0x01, 0xa2, 0xaf, 0x40, 0xc5, 0x63, 0x4f,
	0x22, 0x81, 0x91, 0xbb, 0x68, 0x0e, 0x69, 0x14, 0xbd, 0x83, 0xfe, 0x63, 0xd5, 0x95, 0x7e, 0x55,
	0xb7, 0x2f, 0x66, 0x4f, 0x08, 0x42, 0x42, 0x13, 0x04, 0x59, 0x87, 0x22, 0xee, 0x4f, 0xa3, 0xac,
	0x8a, 0xe0, 0xec, 0x30, 0x09, 0x0c, 0x79, 0x4b, 0x9e, 0x16, 0xb9, 0xea, 0x24, 0xfa, 0xd4, 0x5e,
	0xb1, 0x22, 0x2e, 0x8f, 0x89, 0x1c, 0x71, 0xa2, 0xc0, 0x19, 0x95, 0x73, 0x38, 0x51, 0x07, 0xa9,
	0x14, 0x93, 0x3a, 0x54, 0x1e, 0x5b, 0xa1, 0xe7, 0x78, 0x27, 0xdc, 0xd0, 0xce, 0x9d, 0x95, 0xbf,
	0x94, 0x22, 0x9a, 0x62, 0xb0, 0x09, 0xc5, 0xc1, 0xd0, 0x8a, 0x98, 0xec, 0x98, 0x20, 0xd3, 0x5a,
	0xb2, 0x44, 0xcb, 0x7c, 0x03, 0xe6, 0x15, 0xc0, 0xf6, 0x63, 0x2f, 0x32, 0xaa, 0xa2, 0x07, 0x29,
	0xa5, 0x16, 0xb2, 0x70, 0xbe, 0x22, 0xa3, 0xaf, 0x3e, 0x7f, 0xbe, 0x22, 0xd3, 0xff, 0x52, 0x82,
	0x92, 0x98, 0x98, 0x2a, 0xfc, 0x51, 0xb2, 0x39, 0xd4, 0x71, 0xf8, 0x32, 0x94, 0x1f, 0xc5, 0x2c,
	0x66, 0x43, 0x55, 0x0a, 0x15, 0x85, 0x25, 0x14, 0xef, 0x4e, 0xc3, 0xd8, 0x65, 0x43, 0xb1, 0x80,
	0x15, 0x3a, 0x61, 0xa0, 0x2d, 0xcf, 0x1f, 0x32, 0x2e, 0x96, 0xad, 0x44, 0x25, 0x81, 0xae, 0x47,
	0x7e, 0x64, 0xb9, 0x03, 0x1e, 0xb8, 0x4e, 0xc4, 0xc5, 0x71, 0xa0, 0x44, 0xab, 0x82, 0xd7, 0x13,
	0x2c, 0xac, 0xaf, 0x72, 0x80, 0x04, 0x53, 0x16, 0x98, 0x79, 0xc9, 0x54, 0xa0, 0xeb, 0xb0, 0x10,
	0xc6, 0x1e, 0xc6, 0x2b, 0x41, 0xcd, 0x09, 0x54, 0x4d, 0x71, 0x15, 0xec, 0x6d, 0xd0, 0x6d, 0x7f,
	0x14, 0xe0, 0x9e, 0x4c, 0xcd, 0x55, 0x04, 0x70, 0x31, 0xe5, 0x2b, 0xe8, 0x5b, 0xb0, 0x68, 0x07,
	0xf1, 0x20, 0x72, 0x46, 0x6c, 0x30, 0x72, 0x5c, 0xd7, 0xc1, 0xc5, 0xca, 0xad, 0xe5, 0x69, 0xcd,
	0x0e, 0xe2, 0xbe, 0x33, 0x62, 0x7b, 0x82, 0x49, 0xd6, 0x40, 0x7f, 0x6c, 0xb9, 0xee, 0x14, 0x10,
	0x04, 0x70, 0x01, 0xf9, 0x19, 0xe4, 0x4d, 0x20, 0x6a, 0x22, 0x59, 0x6c, 0x55, 0x60, 0x75, 0x29,
	0xc9, 0xa0, 0xeb, 0x70, 0x89, 0xb9, 0x56, 0xc0, 0xcf, 0xc0, 0xe7, 0x05, 0xfc, 0xa2, 0x12, 0x65,
	0xf0, 0xd7, 0x61, 0x21, 0x08, 0x7d, 0x5b, 0x74, 0xec, 0x41, 0xe8, 0x3f, 0xe6, 0x46, 0x4d, 0xba,
	0x9b, 0x72, 0xa9, 0xff, 0x98, 0x93, 0x1b, 0xb0, 0x38, 0x81, 0x1d, 0x8d, 0x23, 0xc6, 0x8d, 0x05,
	0xe9, 0x6d, 0xca, 0x6e, 0x22, 0x97, 0xac, 0xc3, 0xc5, 0x80, 0x59, 0x0f, 0x07, 0x23, 0x36, 0xf2,
	0xc3, 0xb1, 0x82, 0x2e, 0x0a, 0xe8, 0x22, 0x0a, 0xf6, 0x04, 0x5f, 0x62, 0x57, 0xa1, 0xc6, 0x03,
	0xc7, 0x75, 0x53, 0x93, 0xba, 0xc0, 0xcd, 0x2b, 0xa6, 0x04, 0x7d, 0x00, 0x10, 0xfa, 0x7e, 0x84,
	0x67, 0xca, 0x13, 0x66, 0x5c, 0x7c, 0x6e, 0x7d, 0xd2, 0x10, 0xd9, 0x43, 0x20, 0xd9, 0x80, 0x4b,
	0x41, 0xe8, 0x9f, 0xe0, 0x51, 0x64, 0x10, 0xb0, 0xd0, 0x66, 0x9e, 0xd0, 0x27, 0xd7, 0x72, 0x6b,
	0x39, 0x4a, 0x12, 0xd1, 0x41, 0x2a, 0x31, 0x77, 0xa1, 0xdc, 0x13, 0x57, 0x78, 0xac, 0x68, 0xa7,
	0x2c, 0xe4, 0x93, 0x4e, 0x91, 0x90, 0x64, 0x0d, 0xca, 0xc7, 0xd8, 0x52, 0x93, 0xab, 0xc8, 0xf9,
	0x5e, 0xab, 0xe4, 0x66, 0x13, 0xb4, 0x49, 0xaf, 0xf8, 0x00, 0xe6, 0xbe, 0x96, 0xfd, 0x43, 0x18,
	0xac, 0x6e, 0xbf, 0x96, 0xd1, 0x3b, 0xdb, 0x59, 0x68, 0x82, 0x35, 0xff, 0x94, 0x83, 0x39, 0x75,
	0x05, 0xc6, 0xcd, 0xe3, 0xc7, 0x51, 0x10, 0x27, 0x45, 0x56, 0x51, 0xe4, 0x7d, 0xd0, 0xdc, 0xa4,
	0xbd, 0x88, 0x5d, 0x30, 0x7d, 0xc9, 0x4b, 0x5b, 0xcf, 0xdd, 0x0b, 0x74, 0x02, 0xc4, 0x53, 0x93,
	0x1d, 0xfa, 0x9e, 0xc8, 0x4c, 0x71, 0x6a, 0x42, 0x0a, 0x4f, 0x42, 0x8f, 0xf1, 0x82, 0x20, 0x32,
	0x60, 0x7a, 0x72, 0xe2, 0x7e, 0x81, 0x27, 0x21, 0x01, 0x68, 0x56, 0x41, 0xb3, 0x7d, 0x6f, 0x28,
	0xce, 0x14, 0xe6, 0x37, 0x39, 0xa8, 0xa5, 0xde, 0xf7, 0x22, 0x16, 0xa0, 0xb3, 0xf2, 0xb5, 0x23,
	0x71, 0x56, 0x52, 0x64, 0x3b, 0x3d, 0x7c, 0x60, 0x05, 0x58, 0x98, 0xba, 0x71, 0xa7, 0x16, 0x6e,
	0x0b, 0x44, 0x7a, 0x30, 0xd9, 0x06, 0x2d, 0x4a, 0x44, 0xea, 0x88, 0xb6, 0x34, 0x4b, 0x8d, 0x4e,
	0x60, 0xe6, 0x77, 0x39, 0x28, 0xc9, 0xe3, 0xe1, 0xac, 0x2e, 0xfd, 0x1e, 0x80, 0x58, 0x24, 0x59,
	0x16, 0xa5, 0x27, 0x4b, 0x67, 0x17, 0x12, 0x0b, 0x24, 0xd5, 0x8e, 0x93, 0x4f, 0x2c, 0xd2, 0x56,
	0x18, 0x5a, 0xe3, 0x19, 0xa7, 0x44, 0x75, 0x89, 0x16, 0xe2, 0x4c, 0x86, 0x14, 0x5f, 0x90, 0x21,
	0xff, 0xca, 0x41, 0x11, 0xe7, 0x4a, 0x6e, 0x43, 0x15, 0xbd, 0x1e, 0xc8, 0x07, 0x24, 0x95, 0x21,
	0xd7, 0x13, 0xbd, 0xcc, 0xd3, 0x92, 0x7a, 0x6d, 0xaa, 0x7f, 0xde, 0xdb, 0xef, 0xca, 0x54, 0xa5,
	0x20, 0x62, 0x2e, 0xd3, 0xf6, 0x7d, 0xd0, 0x62, 0x27, 0xb1, 0x92, 0x7f, 0xfe, 0xab, 0x43, 0x25,
	0x76, 0x26, 0x5a, 0x62, 0x74, 0xd1, 0xd6, 0x0a, 0x2f, 0xd0, 0x42, 0xe4, 0x0e, 0xf6, 0xb6, 0x35,
	0xd0, 0x33, 0x3e, 0xcb, 0x48, 0xca, 0xbe, 0xba, 0x30, 0xf1, 0x08, 0x03, 0x67, 0xfe, 0x0a, 0xe6,
	0x54, 0x6b, 0xc2, 0x1b, 0x96, 0x6a, 0x4e, 0xf2, 0x06, 0x98, 0x3b, 0x77, 0xf9, 0x50, 0x48, 0xbc,
	0x0e, 0xd2, 0xea, 0xe3, 0x09, 0xf1, 0xec, 0xab, 0x8c, 0xf9, 0x01, 0x54, 0x33, 0x5a, 0xb8, 0xe0,
	0xa9, 0xed, 0x02, 0x15, 0xdf, 0xb3, 0x9e, 0x2d, 0xcc, 0xbf, 0xe7, 0x00, 0x0e, 0x7c, 0xd7, 0xb1,
	0xc7, 0x4d, 0x8b, 0x63, 0xb5, 0xa8, 0x70, 0xe6, 0x32, 0x3b, 0xf2, 0x43, 0xb5, 0x8b, 0x2e, 0x65,
	0xdb, 0xb5, 0x12, 0xd1, 0x14, 0x44, 0xb6, 0x00, 0xd2, 0x1d, 0x80, 0xf5, 0x4d, 0x1e, 0x1c, 0x54,
	0xdc, 0x30, 0x1c, 0xf5, 0xf6, 0x93, 0x20, 0xa4, 0x19, 0x10, 0x39, 0x84, 0x4b, 0xd8, 0x2c, 0x1c,
	0x2c, 0x77, 0x19, 0x5d, 0x22, 0x74, 0xaf, 0x27, 0xba, 0x56, 0xe0, 0xd4, 0xc5, 0xa3, 0x63, 0xf2,
	0x76, 0x59, 0x6f, 0xc9, 0xb7, 0x4b, 0x61, 0x8f, 0x24, 0x16, 0x5a, 0xa9, 0x01, 0xf3, 0xdf, 0x39,
	0xa8, 0x24, 0x1e, 0x92, 0x3b, 0x67, 0x9e, 0x0a, 0x96, 0xce, 0x3d, 0x7a, 0x24, 0xd0, 0xe7, 0xbf,
	0x16, 0x90, 0x03, 0xb8, 0x28, 0x0d, 0xa1, 0x33, 0x8c, 0x73, 0xe1, 0xab, 0xac, 0x7a, 0xab, 0xd9,
	0x02, 0x83, 0xe8, 0x34, 0x3e, 0xec, 0x51, 0xec, 0x84, 0x6c, 0xc4, 0xbc, 0x88, 0xea, 0x42, 0xbb,
	0x3d, 0x51, 0x7e, 0xe9, 0xf7, 0x87, 0x5f, 0x83, 0xf1, 0xac, 0xd1, 0x66, 0xd8, 0x59, 0x86, 0x0a,
	0x5e, 0x1a, 0x2c, 0x5c, 0x51, 0xf5, 0x10, 0x91, 0xd0, 0x58, 0x9f, 0x84, 0x59, 0xf9, 0x26, 0xa4,
	0x51, 0x45, 0x99, 0x7f, 0x2b, 0x40, 0xa9, 0xef, 0x3f, 0x64, 0x1e, 0xd9, 0x80, 0xe2, 0x88, 0x45,
	0xc9, 0x66, 0x7c, 0x25, 0x99, 0xb0, 0x78, 0xce, 0xc5, 0x69, 0xef, 0xb1, 0xc8, 0x4a, 0x9e, 0x51,
	0x11, 0x48, 0xde, 0x85, 0x45, 0xce, 0xc2, 0x53, 0xc7, 0x66, 0x03, 0xcb, 0x96, 0xc7, 0xa9, 0xec,
	0x5b, 0xea, 0x82, 0x12, 0x36, 0xa4, 0x8c, 0x0c, 0x81, 0x9c, 0x81, 0x0f, 0x1c, 0x79, 0xf8, 0x29,
	0x36, 0x3f, 0xfc, 0xe1, 0xe9, 0x4a, 0x9d, 0xb6, 0x6f, 0xb7, 0x69, 0xbb, 0xdb, 0x6a, 0xf7, 0xae,
	0x29, 0xa0, 0xc2, 0xf1, 0xb5, 0xf3, 0x8a, 0x6f, 0x8b, 0x31, 0xf4, 0xe9, 0x31, 0x3a, 0x43, 0x72,
	0x47, 0xdc, 0x6b, 0xac, 0x48, 0xf4, 0x57, 0xb1, 0x3f, 0xab, 0xdb, 0x57, 0xce, 0xcd, 0x85, 0xaa,
	0xa7, 0xe9, 0x66, 0xed, 0x0f, 0x4f, 0x57, 0x4a, 0x58, 0x5c, 0x9a, 0xf2, 0xfd, 0x57, 0xe9, 0x36,
	0xc7, 0xe4, 0x06, 0xcc, 0x5b, 0x36, 0x76, 0xf9, 0x41, 0x84, 0xe1, 0x91, 0xaf, 0x2f, 0xcd, 0xe2,
	0x1f, 0x9f, 0xae, 0xe4, 0x68, 0x55, 0x4a, 0x64, 0xdc, 0x56, 0xa1, 0x16, 0xb2, 0xe3, 0x90, 0xf1,
	0x07, 0x0a, 0x59, 0x96, 0x97, 0x5a, 0xc5, 0x94, 0xa0, 0x65, 0x28, 0x71, 0xdb, 0x0f, 0xe4, 0x65,
	0x27, 0x89, 0x90, 0x64, 0xdd, 0xda, 0xf9, 0xcf, 0xd3, 0x95, 0xa5, 0xcd, 0xcd, 0xcd, 0xcd, 0xad,
	0xcd, 0x81, 0x1c, 0x5f, 0x1a, 0xe2, 0x3f, 0x3e, 0x5d, 0x01, 0x8c, 0xf4, 0x40, 0xbc, 0x4a, 0xff,
	0xf8, 0x74, 0x45, 0x13, 0x14, 0x6e, 0xe6, 0xdf, 0xfe, 0xb0, 0x32, 0x3d, 0xea, 0xfa, 0x9b, 0xb0,
	0x78, 0xa6, 0x9f, 0x90, 0x0a, 0x14, 0x71, 0x6a, 0xfa, 0x05, 0x32, 0x07, 0x85, 0x56, 0xef, 0x50,
	0xcf, 0xad, 0x7f, 0x93, 0x07, 0x2d, 0x2d, 0xf6, 0xa4, 0x0a, 0x73, 0x9d, 0xee, 0x61, 0x63, 0xb7,
	0xb3, 0xa3, 0x5f, 0x40, 0xa2, 0xdf, 0xe9, 0xde, 0xef, 0x74, 0xfb, 0x7a, 0x8e, 0xcc, 0x43, 0xa5,
	0xb7, 0xd7, 0xd8, 0xdd, 0x45, 0x2a, 0x2f, 0x71, 0xfd, 0xf6, 0x9d, 0x36, 0xd5, 0x0b, 0x04, 0xa0,
	0xdc, 0xec, 0xdc, 0x41, 0x41, 0x91, 0x68, 0x50, 0xba, 0xbd, 0xbb, 0xdf, 0xe8, 0xeb, 0x25, 0x64,
	0xef, 0xec, 0xdf, 0x6b, 0xee, 0xb6, 0xf5, 0x32, 0xe2, 0x77, 0xda, 0xad, 0xce, 0x5e, 0x63, 0x57,
	0x9f, 0x43, 0xa2, 0x7b, 0x6f, 0xaf, 0x4d, 0x3b, 0x2d, 0xbd, 0x42, 0x6a, 0xa0, 0xf5, 0x3b, 0x7b,
	0xed, 0x5e, 0xbf, 0xb1, 0x77, 0xa0, 0xbf, 0x82, 0x1e, 0xee, 0x34, 0xfa, 0x6d, 0xfd, 0x32, 0x0e,
	0x88, 0x43, 0xd0, 0xc3, 0xc6, 0xae, 0xfe, 0x2a, 0x1a, 0xeb, 0xf5, 0x69, 0xa7, 0x7b, 0x47, 0x7f,
	0x1b, 0xf5, 0x0f, 0x1b, 0xb4, 0x75, 0xb7, 0x41, 0xf5, 0x75, 0x54, 0x10, 0x5f, 0xef, 0x20, 0xbb,
	0xb9, 0xbf, 0xbf, 0xdb, 0x6e, 0x74, 0xf5, 0x4f, 0xa5, 0x4f, 0xdd, 0x06, 0xbd, 0xaf, 0x7f, 0x86,
	0x3e, 0x35, 0x28, 0x6d, 0xdc, 0xd7, 0xbf, 0xc0, 0x69, 0xef, 0x35, 0x0e, 0x74, 0xaa, 0xec, 0xdd,
	0x6b, 0xf5, 0xf5, 0x1e, 0xba, 0x70, 0xaf, 0xdb, 0xd9, 0xef, 0xf6, 0xef, 0x1f, 0xb4, 0xf5, 0x7e,
	0xb3, 0x07, 0x35, 0xdb, 0x1f, 0x4d, 0xb6, 0x77, 0x73, 0x21, 0x49, 0x0e, 0x7e, 0x80, 0xbd, 0xe0,
	0x20, 0xf7, 0x0b, 0x92, 0xfe, 0x13, 0xf3, 0x89, 0xfc, 0x3a, 0xdd, 0xfa, 0x2e, 0x5f, 0xe8, 0x7c,
	0xf5, 0xd5, 0xf7, 0x79, 0xad, 0x23, 0xf5, 0x0e, 0xb7, 0xfe, 0x91, 0x7c, 0xff, 0xf2, 0x70, 0xeb,
	0xa8, 0x2c, 0xda, 0xc8, 0x7b, 0xff, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x35, 0x59, 0xef, 0x61, 0xc4,
	0x19, 0x00, 0x00,
}
