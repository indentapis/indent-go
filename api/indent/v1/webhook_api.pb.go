// Code generated by protoc-gen-go. DO NOT EDIT.
// source: indent/v1/webhook_api.proto

package indentv1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	v1 "go.indent.com/indent-go/api/indent/audit/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ListWebhooksRequest struct {
	// Space of Webhooks to retrieve.
	SpaceName string `protobuf:"bytes,1,opt,name=space_name,json=spaceName,proto3" json:"space_name,omitempty"`
	// Among constrains listed webhooks by name.
	Among []string `protobuf:"bytes,4,rep,name=among,proto3" json:"among,omitempty"`
	// Max number of Webhooks to be returned.
	PageSize int32 `protobuf:"varint,10,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Token for current page position for this list of Webhooks.
	PageToken string `protobuf:"bytes,15,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	// Kinds that must be supported by the Webhooks.
	Kinds []string `protobuf:"bytes,17,rep,name=kinds,proto3" json:"kinds,omitempty"`
	// Capabilities that must be supported by the Webhooks.
	Capabilities         []string `protobuf:"bytes,19,rep,name=capabilities,proto3" json:"capabilities,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListWebhooksRequest) Reset()         { *m = ListWebhooksRequest{} }
func (m *ListWebhooksRequest) String() string { return proto.CompactTextString(m) }
func (*ListWebhooksRequest) ProtoMessage()    {}
func (*ListWebhooksRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f90b625c517bb32, []int{0}
}

func (m *ListWebhooksRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWebhooksRequest.Unmarshal(m, b)
}
func (m *ListWebhooksRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWebhooksRequest.Marshal(b, m, deterministic)
}
func (m *ListWebhooksRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWebhooksRequest.Merge(m, src)
}
func (m *ListWebhooksRequest) XXX_Size() int {
	return xxx_messageInfo_ListWebhooksRequest.Size(m)
}
func (m *ListWebhooksRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWebhooksRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListWebhooksRequest proto.InternalMessageInfo

func (m *ListWebhooksRequest) GetSpaceName() string {
	if m != nil {
		return m.SpaceName
	}
	return ""
}

func (m *ListWebhooksRequest) GetAmong() []string {
	if m != nil {
		return m.Among
	}
	return nil
}

func (m *ListWebhooksRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListWebhooksRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

func (m *ListWebhooksRequest) GetKinds() []string {
	if m != nil {
		return m.Kinds
	}
	return nil
}

func (m *ListWebhooksRequest) GetCapabilities() []string {
	if m != nil {
		return m.Capabilities
	}
	return nil
}

type ListWebhooksResponse struct {
	// Paginated list of Webhooks in a Space.
	Webhooks []*Webhook `protobuf:"bytes,1,rep,name=webhooks,proto3" json:"webhooks,omitempty"`
	// Page cursor for list of Webhooks.
	NextPageToken        string   `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListWebhooksResponse) Reset()         { *m = ListWebhooksResponse{} }
func (m *ListWebhooksResponse) String() string { return proto.CompactTextString(m) }
func (*ListWebhooksResponse) ProtoMessage()    {}
func (*ListWebhooksResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f90b625c517bb32, []int{1}
}

func (m *ListWebhooksResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWebhooksResponse.Unmarshal(m, b)
}
func (m *ListWebhooksResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWebhooksResponse.Marshal(b, m, deterministic)
}
func (m *ListWebhooksResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWebhooksResponse.Merge(m, src)
}
func (m *ListWebhooksResponse) XXX_Size() int {
	return xxx_messageInfo_ListWebhooksResponse.Size(m)
}
func (m *ListWebhooksResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWebhooksResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListWebhooksResponse proto.InternalMessageInfo

func (m *ListWebhooksResponse) GetWebhooks() []*Webhook {
	if m != nil {
		return m.Webhooks
	}
	return nil
}

func (m *ListWebhooksResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetWebhookRequest struct {
	// Name of space containing Webhook.
	SpaceName string `protobuf:"bytes,1,opt,name=space_name,json=spaceName,proto3" json:"space_name,omitempty"`
	// Name of Webhook to retrieve.
	WebhookName          string   `protobuf:"bytes,5,opt,name=webhook_name,json=webhookName,proto3" json:"webhook_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWebhookRequest) Reset()         { *m = GetWebhookRequest{} }
func (m *GetWebhookRequest) String() string { return proto.CompactTextString(m) }
func (*GetWebhookRequest) ProtoMessage()    {}
func (*GetWebhookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f90b625c517bb32, []int{2}
}

func (m *GetWebhookRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWebhookRequest.Unmarshal(m, b)
}
func (m *GetWebhookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWebhookRequest.Marshal(b, m, deterministic)
}
func (m *GetWebhookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWebhookRequest.Merge(m, src)
}
func (m *GetWebhookRequest) XXX_Size() int {
	return xxx_messageInfo_GetWebhookRequest.Size(m)
}
func (m *GetWebhookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWebhookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWebhookRequest proto.InternalMessageInfo

func (m *GetWebhookRequest) GetSpaceName() string {
	if m != nil {
		return m.SpaceName
	}
	return ""
}

func (m *GetWebhookRequest) GetWebhookName() string {
	if m != nil {
		return m.WebhookName
	}
	return ""
}

type CreateWebhookRequest struct {
	// Space where Webhook should be created.
	SpaceName string `protobuf:"bytes,1,opt,name=space_name,json=spaceName,proto3" json:"space_name,omitempty"`
	// Webhook being created, name is ignored and will be autogenerated.
	Webhook              *Webhook `protobuf:"bytes,5,opt,name=webhook,proto3" json:"webhook,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateWebhookRequest) Reset()         { *m = CreateWebhookRequest{} }
func (m *CreateWebhookRequest) String() string { return proto.CompactTextString(m) }
func (*CreateWebhookRequest) ProtoMessage()    {}
func (*CreateWebhookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f90b625c517bb32, []int{3}
}

func (m *CreateWebhookRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWebhookRequest.Unmarshal(m, b)
}
func (m *CreateWebhookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWebhookRequest.Marshal(b, m, deterministic)
}
func (m *CreateWebhookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWebhookRequest.Merge(m, src)
}
func (m *CreateWebhookRequest) XXX_Size() int {
	return xxx_messageInfo_CreateWebhookRequest.Size(m)
}
func (m *CreateWebhookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWebhookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWebhookRequest proto.InternalMessageInfo

func (m *CreateWebhookRequest) GetSpaceName() string {
	if m != nil {
		return m.SpaceName
	}
	return ""
}

func (m *CreateWebhookRequest) GetWebhook() *Webhook {
	if m != nil {
		return m.Webhook
	}
	return nil
}

type UpdateWebhookRequest struct {
	// Space where Webhook should be updated.
	SpaceName string `protobuf:"bytes,1,opt,name=space_name,json=spaceName,proto3" json:"space_name,omitempty"`
	// Name of the webhook to update.
	WebhookName string `protobuf:"bytes,5,opt,name=webhook_name,json=webhookName,proto3" json:"webhook_name,omitempty"`
	// Webhook after update, name is ignored.
	Webhook              *Webhook `protobuf:"bytes,10,opt,name=webhook,proto3" json:"webhook,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UpdateWebhookRequest) Reset()         { *m = UpdateWebhookRequest{} }
func (m *UpdateWebhookRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateWebhookRequest) ProtoMessage()    {}
func (*UpdateWebhookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f90b625c517bb32, []int{4}
}

func (m *UpdateWebhookRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWebhookRequest.Unmarshal(m, b)
}
func (m *UpdateWebhookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWebhookRequest.Marshal(b, m, deterministic)
}
func (m *UpdateWebhookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWebhookRequest.Merge(m, src)
}
func (m *UpdateWebhookRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateWebhookRequest.Size(m)
}
func (m *UpdateWebhookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWebhookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWebhookRequest proto.InternalMessageInfo

func (m *UpdateWebhookRequest) GetSpaceName() string {
	if m != nil {
		return m.SpaceName
	}
	return ""
}

func (m *UpdateWebhookRequest) GetWebhookName() string {
	if m != nil {
		return m.WebhookName
	}
	return ""
}

func (m *UpdateWebhookRequest) GetWebhook() *Webhook {
	if m != nil {
		return m.Webhook
	}
	return nil
}

type DeleteWebhookRequest struct {
	// Space where Webhook should be deleted.
	SpaceName string `protobuf:"bytes,1,opt,name=space_name,json=spaceName,proto3" json:"space_name,omitempty"`
	// Name of the webhook to delete.
	WebhookName          string   `protobuf:"bytes,5,opt,name=webhook_name,json=webhookName,proto3" json:"webhook_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteWebhookRequest) Reset()         { *m = DeleteWebhookRequest{} }
func (m *DeleteWebhookRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteWebhookRequest) ProtoMessage()    {}
func (*DeleteWebhookRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f90b625c517bb32, []int{5}
}

func (m *DeleteWebhookRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteWebhookRequest.Unmarshal(m, b)
}
func (m *DeleteWebhookRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteWebhookRequest.Marshal(b, m, deterministic)
}
func (m *DeleteWebhookRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteWebhookRequest.Merge(m, src)
}
func (m *DeleteWebhookRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteWebhookRequest.Size(m)
}
func (m *DeleteWebhookRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteWebhookRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteWebhookRequest proto.InternalMessageInfo

func (m *DeleteWebhookRequest) GetSpaceName() string {
	if m != nil {
		return m.SpaceName
	}
	return ""
}

func (m *DeleteWebhookRequest) GetWebhookName() string {
	if m != nil {
		return m.WebhookName
	}
	return ""
}

// Webhook describes a mechanism for modifying permissions.
type Webhook struct {
	// Name used to uniquely identify Webhook.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// SpaceName is the space the webhook is in.
	SpaceName string `protobuf:"bytes,2,opt,name=space_name,json=spaceName,proto3" json:"space_name,omitempty"`
	// DisplayName shown to users for Webhook.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// Labels allow arbitrary information to be stored about the Webhook.
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// URL requested when a permission is granted or revoked.
	Url string `protobuf:"bytes,10,opt,name=url,proto3" json:"url,omitempty"`
	// Method used to send HTTP message.
	Method string `protobuf:"bytes,20,opt,name=method,proto3" json:"method,omitempty"`
	// Headers included when request to URL is made.
	Headers map[string]*Header `protobuf:"bytes,30,rep,name=headers,proto3" json:"headers,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// Secret used to sign the request.
	Secret string `protobuf:"bytes,40,opt,name=secret,proto3" json:"secret,omitempty"`
	// DryRun indicates whether the webhook should be skipped instead of triggered.
	DryRun               bool     `protobuf:"varint,50,opt,name=dry_run,json=dryRun,proto3" json:"dry_run,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Webhook) Reset()         { *m = Webhook{} }
func (m *Webhook) String() string { return proto.CompactTextString(m) }
func (*Webhook) ProtoMessage()    {}
func (*Webhook) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f90b625c517bb32, []int{6}
}

func (m *Webhook) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Webhook.Unmarshal(m, b)
}
func (m *Webhook) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Webhook.Marshal(b, m, deterministic)
}
func (m *Webhook) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Webhook.Merge(m, src)
}
func (m *Webhook) XXX_Size() int {
	return xxx_messageInfo_Webhook.Size(m)
}
func (m *Webhook) XXX_DiscardUnknown() {
	xxx_messageInfo_Webhook.DiscardUnknown(m)
}

var xxx_messageInfo_Webhook proto.InternalMessageInfo

func (m *Webhook) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Webhook) GetSpaceName() string {
	if m != nil {
		return m.SpaceName
	}
	return ""
}

func (m *Webhook) GetDisplayName() string {
	if m != nil {
		return m.DisplayName
	}
	return ""
}

func (m *Webhook) GetLabels() map[string]string {
	if m != nil {
		return m.Labels
	}
	return nil
}

func (m *Webhook) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *Webhook) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *Webhook) GetHeaders() map[string]*Header {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *Webhook) GetSecret() string {
	if m != nil {
		return m.Secret
	}
	return ""
}

func (m *Webhook) GetDryRun() bool {
	if m != nil {
		return m.DryRun
	}
	return false
}

// Header of a Webhook.
type Header struct {
	// Credential used as the Value.
	Credential string `protobuf:"bytes,10,opt,name=credential,proto3" json:"credential,omitempty"`
	// Value used if Credential is not set.
	Value                string   `protobuf:"bytes,20,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Header) Reset()         { *m = Header{} }
func (m *Header) String() string { return proto.CompactTextString(m) }
func (*Header) ProtoMessage()    {}
func (*Header) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f90b625c517bb32, []int{7}
}

func (m *Header) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Header.Unmarshal(m, b)
}
func (m *Header) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Header.Marshal(b, m, deterministic)
}
func (m *Header) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Header.Merge(m, src)
}
func (m *Header) XXX_Size() int {
	return xxx_messageInfo_Header.Size(m)
}
func (m *Header) XXX_DiscardUnknown() {
	xxx_messageInfo_Header.DiscardUnknown(m)
}

var xxx_messageInfo_Header proto.InternalMessageInfo

func (m *Header) GetCredential() string {
	if m != nil {
		return m.Credential
	}
	return ""
}

func (m *Header) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

type ListWebhookPoliciesRequest struct {
	// Name of Space containing WebhookPolicies.
	SpaceName string `protobuf:"bytes,1,opt,name=space_name,json=spaceName,proto3" json:"space_name,omitempty"`
	// Among constrains listed webhook policies by name.
	Among []string `protobuf:"bytes,4,rep,name=among,proto3" json:"among,omitempty"`
	// LabelSelector specifies which WebhookPolicies should be returned.
	LabelSelector string `protobuf:"bytes,5,opt,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty"`
	// Max number of WebhookPolicies to be returned.
	PageSize int32 `protobuf:"varint,10,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	// Token for current page position for this list of WebhookPolicies.
	PageToken            string   `protobuf:"bytes,11,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListWebhookPoliciesRequest) Reset()         { *m = ListWebhookPoliciesRequest{} }
func (m *ListWebhookPoliciesRequest) String() string { return proto.CompactTextString(m) }
func (*ListWebhookPoliciesRequest) ProtoMessage()    {}
func (*ListWebhookPoliciesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f90b625c517bb32, []int{8}
}

func (m *ListWebhookPoliciesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWebhookPoliciesRequest.Unmarshal(m, b)
}
func (m *ListWebhookPoliciesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWebhookPoliciesRequest.Marshal(b, m, deterministic)
}
func (m *ListWebhookPoliciesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWebhookPoliciesRequest.Merge(m, src)
}
func (m *ListWebhookPoliciesRequest) XXX_Size() int {
	return xxx_messageInfo_ListWebhookPoliciesRequest.Size(m)
}
func (m *ListWebhookPoliciesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWebhookPoliciesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ListWebhookPoliciesRequest proto.InternalMessageInfo

func (m *ListWebhookPoliciesRequest) GetSpaceName() string {
	if m != nil {
		return m.SpaceName
	}
	return ""
}

func (m *ListWebhookPoliciesRequest) GetAmong() []string {
	if m != nil {
		return m.Among
	}
	return nil
}

func (m *ListWebhookPoliciesRequest) GetLabelSelector() string {
	if m != nil {
		return m.LabelSelector
	}
	return ""
}

func (m *ListWebhookPoliciesRequest) GetPageSize() int32 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *ListWebhookPoliciesRequest) GetPageToken() string {
	if m != nil {
		return m.PageToken
	}
	return ""
}

type ListWebhookPoliciesResponse struct {
	// Paginated list of WebhookPolicies in a Space.
	Policies []*WebhookPolicy `protobuf:"bytes,1,rep,name=policies,proto3" json:"policies,omitempty"`
	// Page cursor for list of WebhookPolicies.
	NextPageToken        string   `protobuf:"bytes,5,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ListWebhookPoliciesResponse) Reset()         { *m = ListWebhookPoliciesResponse{} }
func (m *ListWebhookPoliciesResponse) String() string { return proto.CompactTextString(m) }
func (*ListWebhookPoliciesResponse) ProtoMessage()    {}
func (*ListWebhookPoliciesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f90b625c517bb32, []int{9}
}

func (m *ListWebhookPoliciesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ListWebhookPoliciesResponse.Unmarshal(m, b)
}
func (m *ListWebhookPoliciesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ListWebhookPoliciesResponse.Marshal(b, m, deterministic)
}
func (m *ListWebhookPoliciesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ListWebhookPoliciesResponse.Merge(m, src)
}
func (m *ListWebhookPoliciesResponse) XXX_Size() int {
	return xxx_messageInfo_ListWebhookPoliciesResponse.Size(m)
}
func (m *ListWebhookPoliciesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ListWebhookPoliciesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ListWebhookPoliciesResponse proto.InternalMessageInfo

func (m *ListWebhookPoliciesResponse) GetPolicies() []*WebhookPolicy {
	if m != nil {
		return m.Policies
	}
	return nil
}

func (m *ListWebhookPoliciesResponse) GetNextPageToken() string {
	if m != nil {
		return m.NextPageToken
	}
	return ""
}

type GetWebhookPolicyRequest struct {
	// Name of space containing WebhookPolicy.
	SpaceName string `protobuf:"bytes,1,opt,name=space_name,json=spaceName,proto3" json:"space_name,omitempty"`
	// Name of WebhookPolicy to retrieve.
	PolicyName           string   `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetWebhookPolicyRequest) Reset()         { *m = GetWebhookPolicyRequest{} }
func (m *GetWebhookPolicyRequest) String() string { return proto.CompactTextString(m) }
func (*GetWebhookPolicyRequest) ProtoMessage()    {}
func (*GetWebhookPolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f90b625c517bb32, []int{10}
}

func (m *GetWebhookPolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetWebhookPolicyRequest.Unmarshal(m, b)
}
func (m *GetWebhookPolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetWebhookPolicyRequest.Marshal(b, m, deterministic)
}
func (m *GetWebhookPolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetWebhookPolicyRequest.Merge(m, src)
}
func (m *GetWebhookPolicyRequest) XXX_Size() int {
	return xxx_messageInfo_GetWebhookPolicyRequest.Size(m)
}
func (m *GetWebhookPolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetWebhookPolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetWebhookPolicyRequest proto.InternalMessageInfo

func (m *GetWebhookPolicyRequest) GetSpaceName() string {
	if m != nil {
		return m.SpaceName
	}
	return ""
}

func (m *GetWebhookPolicyRequest) GetPolicyName() string {
	if m != nil {
		return m.PolicyName
	}
	return ""
}

type CreateWebhookPolicyRequest struct {
	// Space where WebhookPolicy should be created.
	SpaceName string `protobuf:"bytes,1,opt,name=space_name,json=spaceName,proto3" json:"space_name,omitempty"`
	// WebhookPolicy being created, name is ignored and will be autogenerated.
	Policy               *WebhookPolicy `protobuf:"bytes,40,opt,name=policy,proto3" json:"policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *CreateWebhookPolicyRequest) Reset()         { *m = CreateWebhookPolicyRequest{} }
func (m *CreateWebhookPolicyRequest) String() string { return proto.CompactTextString(m) }
func (*CreateWebhookPolicyRequest) ProtoMessage()    {}
func (*CreateWebhookPolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f90b625c517bb32, []int{11}
}

func (m *CreateWebhookPolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateWebhookPolicyRequest.Unmarshal(m, b)
}
func (m *CreateWebhookPolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateWebhookPolicyRequest.Marshal(b, m, deterministic)
}
func (m *CreateWebhookPolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateWebhookPolicyRequest.Merge(m, src)
}
func (m *CreateWebhookPolicyRequest) XXX_Size() int {
	return xxx_messageInfo_CreateWebhookPolicyRequest.Size(m)
}
func (m *CreateWebhookPolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateWebhookPolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateWebhookPolicyRequest proto.InternalMessageInfo

func (m *CreateWebhookPolicyRequest) GetSpaceName() string {
	if m != nil {
		return m.SpaceName
	}
	return ""
}

func (m *CreateWebhookPolicyRequest) GetPolicy() *WebhookPolicy {
	if m != nil {
		return m.Policy
	}
	return nil
}

type UpdateWebhookPolicyRequest struct {
	// SpaceName where WebhookPolicy should be updated.
	SpaceName string `protobuf:"bytes,1,opt,name=space_name,json=spaceName,proto3" json:"space_name,omitempty"`
	// Name of the WebhookPolicy being updated.
	PolicyName string `protobuf:"bytes,3,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	// WebhookPolicy being updated, name is ignored.
	Policy               *WebhookPolicy `protobuf:"bytes,40,opt,name=policy,proto3" json:"policy,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *UpdateWebhookPolicyRequest) Reset()         { *m = UpdateWebhookPolicyRequest{} }
func (m *UpdateWebhookPolicyRequest) String() string { return proto.CompactTextString(m) }
func (*UpdateWebhookPolicyRequest) ProtoMessage()    {}
func (*UpdateWebhookPolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f90b625c517bb32, []int{12}
}

func (m *UpdateWebhookPolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UpdateWebhookPolicyRequest.Unmarshal(m, b)
}
func (m *UpdateWebhookPolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UpdateWebhookPolicyRequest.Marshal(b, m, deterministic)
}
func (m *UpdateWebhookPolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UpdateWebhookPolicyRequest.Merge(m, src)
}
func (m *UpdateWebhookPolicyRequest) XXX_Size() int {
	return xxx_messageInfo_UpdateWebhookPolicyRequest.Size(m)
}
func (m *UpdateWebhookPolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_UpdateWebhookPolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_UpdateWebhookPolicyRequest proto.InternalMessageInfo

func (m *UpdateWebhookPolicyRequest) GetSpaceName() string {
	if m != nil {
		return m.SpaceName
	}
	return ""
}

func (m *UpdateWebhookPolicyRequest) GetPolicyName() string {
	if m != nil {
		return m.PolicyName
	}
	return ""
}

func (m *UpdateWebhookPolicyRequest) GetPolicy() *WebhookPolicy {
	if m != nil {
		return m.Policy
	}
	return nil
}

type DeleteWebhookPolicyRequest struct {
	// Name of Space containing WebhookPolicy.
	SpaceName string `protobuf:"bytes,1,opt,name=space_name,json=spaceName,proto3" json:"space_name,omitempty"`
	// Name of the WebhookPolicy to be deleted.
	PolicyName           string   `protobuf:"bytes,2,opt,name=policy_name,json=policyName,proto3" json:"policy_name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DeleteWebhookPolicyRequest) Reset()         { *m = DeleteWebhookPolicyRequest{} }
func (m *DeleteWebhookPolicyRequest) String() string { return proto.CompactTextString(m) }
func (*DeleteWebhookPolicyRequest) ProtoMessage()    {}
func (*DeleteWebhookPolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f90b625c517bb32, []int{13}
}

func (m *DeleteWebhookPolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DeleteWebhookPolicyRequest.Unmarshal(m, b)
}
func (m *DeleteWebhookPolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DeleteWebhookPolicyRequest.Marshal(b, m, deterministic)
}
func (m *DeleteWebhookPolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DeleteWebhookPolicyRequest.Merge(m, src)
}
func (m *DeleteWebhookPolicyRequest) XXX_Size() int {
	return xxx_messageInfo_DeleteWebhookPolicyRequest.Size(m)
}
func (m *DeleteWebhookPolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_DeleteWebhookPolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_DeleteWebhookPolicyRequest proto.InternalMessageInfo

func (m *DeleteWebhookPolicyRequest) GetSpaceName() string {
	if m != nil {
		return m.SpaceName
	}
	return ""
}

func (m *DeleteWebhookPolicyRequest) GetPolicyName() string {
	if m != nil {
		return m.PolicyName
	}
	return ""
}

type TestWebhookPolicyRequest struct {
	// Space where policies should be tested.
	SpaceName string `protobuf:"bytes,1,opt,name=space_name,json=spaceName,proto3" json:"space_name,omitempty"`
	// View specifies which WebhookPolicy defined view should be returned.
	View string `protobuf:"bytes,5,opt,name=view,proto3" json:"view,omitempty"`
	// Policies being tested, names will be ignored.
	Policies             []*WebhookPolicy `protobuf:"bytes,40,rep,name=policies,proto3" json:"policies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *TestWebhookPolicyRequest) Reset()         { *m = TestWebhookPolicyRequest{} }
func (m *TestWebhookPolicyRequest) String() string { return proto.CompactTextString(m) }
func (*TestWebhookPolicyRequest) ProtoMessage()    {}
func (*TestWebhookPolicyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f90b625c517bb32, []int{14}
}

func (m *TestWebhookPolicyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestWebhookPolicyRequest.Unmarshal(m, b)
}
func (m *TestWebhookPolicyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestWebhookPolicyRequest.Marshal(b, m, deterministic)
}
func (m *TestWebhookPolicyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestWebhookPolicyRequest.Merge(m, src)
}
func (m *TestWebhookPolicyRequest) XXX_Size() int {
	return xxx_messageInfo_TestWebhookPolicyRequest.Size(m)
}
func (m *TestWebhookPolicyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TestWebhookPolicyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TestWebhookPolicyRequest proto.InternalMessageInfo

func (m *TestWebhookPolicyRequest) GetSpaceName() string {
	if m != nil {
		return m.SpaceName
	}
	return ""
}

func (m *TestWebhookPolicyRequest) GetView() string {
	if m != nil {
		return m.View
	}
	return ""
}

func (m *TestWebhookPolicyRequest) GetPolicies() []*WebhookPolicy {
	if m != nil {
		return m.Policies
	}
	return nil
}

type TestWebhookPolicyResponse struct {
	// Webhooks selected by the given policies.
	Webhooks             []*Webhook `protobuf:"bytes,1,rep,name=webhooks,proto3" json:"webhooks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *TestWebhookPolicyResponse) Reset()         { *m = TestWebhookPolicyResponse{} }
func (m *TestWebhookPolicyResponse) String() string { return proto.CompactTextString(m) }
func (*TestWebhookPolicyResponse) ProtoMessage()    {}
func (*TestWebhookPolicyResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f90b625c517bb32, []int{15}
}

func (m *TestWebhookPolicyResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestWebhookPolicyResponse.Unmarshal(m, b)
}
func (m *TestWebhookPolicyResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestWebhookPolicyResponse.Marshal(b, m, deterministic)
}
func (m *TestWebhookPolicyResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestWebhookPolicyResponse.Merge(m, src)
}
func (m *TestWebhookPolicyResponse) XXX_Size() int {
	return xxx_messageInfo_TestWebhookPolicyResponse.Size(m)
}
func (m *TestWebhookPolicyResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TestWebhookPolicyResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TestWebhookPolicyResponse proto.InternalMessageInfo

func (m *TestWebhookPolicyResponse) GetWebhooks() []*Webhook {
	if m != nil {
		return m.Webhooks
	}
	return nil
}

type WebhookPolicy struct {
	// Meta contains metadata about the WebhookPolicy.
	Meta *v1.Meta `protobuf:"bytes,5,opt,name=meta,proto3" json:"meta,omitempty"`
	// Base contains generic Policy fields.
	Base *PolicyBase `protobuf:"bytes,15,opt,name=base,proto3" json:"base,omitempty"`
	// WebhookIdentifiers specify webhooks to be applied by this policy.
	Webhooks             []*WebhookIdentifier `protobuf:"bytes,25,rep,name=webhooks,proto3" json:"webhooks,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *WebhookPolicy) Reset()         { *m = WebhookPolicy{} }
func (m *WebhookPolicy) String() string { return proto.CompactTextString(m) }
func (*WebhookPolicy) ProtoMessage()    {}
func (*WebhookPolicy) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f90b625c517bb32, []int{16}
}

func (m *WebhookPolicy) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebhookPolicy.Unmarshal(m, b)
}
func (m *WebhookPolicy) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebhookPolicy.Marshal(b, m, deterministic)
}
func (m *WebhookPolicy) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebhookPolicy.Merge(m, src)
}
func (m *WebhookPolicy) XXX_Size() int {
	return xxx_messageInfo_WebhookPolicy.Size(m)
}
func (m *WebhookPolicy) XXX_DiscardUnknown() {
	xxx_messageInfo_WebhookPolicy.DiscardUnknown(m)
}

var xxx_messageInfo_WebhookPolicy proto.InternalMessageInfo

func (m *WebhookPolicy) GetMeta() *v1.Meta {
	if m != nil {
		return m.Meta
	}
	return nil
}

func (m *WebhookPolicy) GetBase() *PolicyBase {
	if m != nil {
		return m.Base
	}
	return nil
}

func (m *WebhookPolicy) GetWebhooks() []*WebhookIdentifier {
	if m != nil {
		return m.Webhooks
	}
	return nil
}

// WebhookIdentifier identifies one or more webhooks. Its fields are mutually
// exclusive.
type WebhookIdentifier struct {
	// Name is the fully-qualified name of an existing webhook.
	Name                 string   `protobuf:"bytes,10,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *WebhookIdentifier) Reset()         { *m = WebhookIdentifier{} }
func (m *WebhookIdentifier) String() string { return proto.CompactTextString(m) }
func (*WebhookIdentifier) ProtoMessage()    {}
func (*WebhookIdentifier) Descriptor() ([]byte, []int) {
	return fileDescriptor_2f90b625c517bb32, []int{17}
}

func (m *WebhookIdentifier) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_WebhookIdentifier.Unmarshal(m, b)
}
func (m *WebhookIdentifier) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_WebhookIdentifier.Marshal(b, m, deterministic)
}
func (m *WebhookIdentifier) XXX_Merge(src proto.Message) {
	xxx_messageInfo_WebhookIdentifier.Merge(m, src)
}
func (m *WebhookIdentifier) XXX_Size() int {
	return xxx_messageInfo_WebhookIdentifier.Size(m)
}
func (m *WebhookIdentifier) XXX_DiscardUnknown() {
	xxx_messageInfo_WebhookIdentifier.DiscardUnknown(m)
}

var xxx_messageInfo_WebhookIdentifier proto.InternalMessageInfo

func (m *WebhookIdentifier) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*ListWebhooksRequest)(nil), "indent.v1.ListWebhooksRequest")
	proto.RegisterType((*ListWebhooksResponse)(nil), "indent.v1.ListWebhooksResponse")
	proto.RegisterType((*GetWebhookRequest)(nil), "indent.v1.GetWebhookRequest")
	proto.RegisterType((*CreateWebhookRequest)(nil), "indent.v1.CreateWebhookRequest")
	proto.RegisterType((*UpdateWebhookRequest)(nil), "indent.v1.UpdateWebhookRequest")
	proto.RegisterType((*DeleteWebhookRequest)(nil), "indent.v1.DeleteWebhookRequest")
	proto.RegisterType((*Webhook)(nil), "indent.v1.Webhook")
	proto.RegisterMapType((map[string]*Header)(nil), "indent.v1.Webhook.HeadersEntry")
	proto.RegisterMapType((map[string]string)(nil), "indent.v1.Webhook.LabelsEntry")
	proto.RegisterType((*Header)(nil), "indent.v1.Header")
	proto.RegisterType((*ListWebhookPoliciesRequest)(nil), "indent.v1.ListWebhookPoliciesRequest")
	proto.RegisterType((*ListWebhookPoliciesResponse)(nil), "indent.v1.ListWebhookPoliciesResponse")
	proto.RegisterType((*GetWebhookPolicyRequest)(nil), "indent.v1.GetWebhookPolicyRequest")
	proto.RegisterType((*CreateWebhookPolicyRequest)(nil), "indent.v1.CreateWebhookPolicyRequest")
	proto.RegisterType((*UpdateWebhookPolicyRequest)(nil), "indent.v1.UpdateWebhookPolicyRequest")
	proto.RegisterType((*DeleteWebhookPolicyRequest)(nil), "indent.v1.DeleteWebhookPolicyRequest")
	proto.RegisterType((*TestWebhookPolicyRequest)(nil), "indent.v1.TestWebhookPolicyRequest")
	proto.RegisterType((*TestWebhookPolicyResponse)(nil), "indent.v1.TestWebhookPolicyResponse")
	proto.RegisterType((*WebhookPolicy)(nil), "indent.v1.WebhookPolicy")
	proto.RegisterType((*WebhookIdentifier)(nil), "indent.v1.WebhookIdentifier")
}

func init() {
	proto.RegisterFile("indent/v1/webhook_api.proto", fileDescriptor_2f90b625c517bb32)
}

var fileDescriptor_2f90b625c517bb32 = []byte{
	// 1195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x57, 0xdd, 0x6e, 0x1b, 0x45,
	0x14, 0xd6, 0xd8, 0x89, 0x13, 0x1f, 0xdb, 0x84, 0x4c, 0x0d, 0xdd, 0x6c, 0x4a, 0x62, 0x16, 0xd2,
	0xb8, 0x69, 0x65, 0xd7, 0xa6, 0xf4, 0xc7, 0x08, 0x04, 0x01, 0x54, 0x22, 0x5a, 0x14, 0x6d, 0xd3,
	0x12, 0x50, 0x25, 0x6b, 0x62, 0x0f, 0xc9, 0x2a, 0xf6, 0xee, 0x76, 0x77, 0xed, 0xe0, 0x46, 0x91,
	0x10, 0x95, 0x10, 0x57, 0x45, 0x88, 0x07, 0x40, 0xe2, 0x92, 0x6b, 0x24, 0x6e, 0xb9, 0xe6, 0x82,
	0x1b, 0x5e, 0x81, 0x07, 0x41, 0xf3, 0xb3, 0xf6, 0x6c, 0xb2, 0x8e, 0x7f, 0xda, 0xbb, 0xd9, 0x33,
	0xdf, 0x9c, 0xef, 0x9b, 0x33, 0x67, 0xce, 0x99, 0x85, 0x65, 0xcb, 0x6e, 0x52, 0x3b, 0x28, 0x77,
	0x2b, 0xe5, 0x23, 0xba, 0x77, 0xe0, 0x38, 0x87, 0x75, 0xe2, 0x5a, 0x25, 0xd7, 0x73, 0x02, 0x07,
	0xa7, 0xc5, 0x64, 0xa9, 0x5b, 0xd1, 0x2f, 0xed, 0x3b, 0xce, 0x7e, 0x8b, 0x96, 0x89, 0x6b, 0x95,
	0x89, 0x6d, 0x3b, 0x01, 0x09, 0x2c, 0xc7, 0xf6, 0x05, 0x50, 0x5f, 0x95, 0x5e, 0x48, 0xa7, 0x69,
	0x71, 0x5f, 0x1e, 0xf5, 0x9d, 0x8e, 0xd7, 0xa0, 0x21, 0x60, 0x69, 0x40, 0x73, 0x6a, 0xca, 0xf8,
	0x0b, 0xc1, 0x85, 0x7b, 0x96, 0x1f, 0x7c, 0x29, 0xe8, 0x7d, 0x93, 0x3e, 0xe9, 0x50, 0x3f, 0xc0,
	0x6f, 0x00, 0xf8, 0x2e, 0x69, 0xd0, 0xba, 0x4d, 0xda, 0x54, 0x43, 0x05, 0x54, 0x4c, 0x9b, 0x69,
	0x6e, 0xf9, 0x82, 0xb4, 0x29, 0xce, 0xc3, 0x2c, 0x69, 0x3b, 0xf6, 0xbe, 0x36, 0x53, 0x48, 0x16,
	0xd3, 0xa6, 0xf8, 0xc0, 0xcb, 0x90, 0x76, 0xc9, 0x3e, 0xad, 0xfb, 0xd6, 0x53, 0xaa, 0x41, 0x01,
	0x15, 0x67, 0xcd, 0x79, 0x66, 0x78, 0x60, 0x3d, 0xa5, 0xcc, 0x23, 0x9f, 0x0c, 0x9c, 0x43, 0x6a,
	0x6b, 0x0b, 0xc2, 0x23, 0xb3, 0xec, 0x30, 0x03, 0xf3, 0x78, 0x68, 0xd9, 0x4d, 0x5f, 0x5b, 0x14,
	0x1e, 0xf9, 0x07, 0x36, 0x20, 0xdb, 0x20, 0x2e, 0xd9, 0xb3, 0x5a, 0x56, 0x60, 0x51, 0x5f, 0xbb,
	0xc0, 0x27, 0x23, 0x36, 0xc3, 0x86, 0x7c, 0x74, 0x07, 0xbe, 0xeb, 0xd8, 0x3e, 0xc5, 0x25, 0x98,
	0x97, 0x41, 0xf5, 0x35, 0x54, 0x48, 0x16, 0x33, 0x55, 0x5c, 0xea, 0x87, 0xb4, 0x24, 0xe1, 0x66,
	0x1f, 0x83, 0x2f, 0xc3, 0x82, 0x4d, 0xbf, 0x0d, 0xea, 0x8a, 0xca, 0x04, 0x57, 0x99, 0x63, 0xe6,
	0xed, 0x50, 0xa9, 0xf1, 0x10, 0x16, 0xef, 0xd2, 0x90, 0x6e, 0xcc, 0x78, 0xbd, 0x09, 0xd9, 0xf0,
	0x80, 0x39, 0x60, 0x96, 0x03, 0x32, 0xd2, 0xc6, 0x20, 0x46, 0x03, 0xf2, 0x1f, 0x7b, 0x94, 0x04,
	0x74, 0x32, 0xcf, 0xd7, 0x60, 0x4e, 0x7a, 0xe1, 0x4e, 0xe3, 0x37, 0x19, 0x42, 0x8c, 0x1f, 0x10,
	0xe4, 0x1f, 0xba, 0xcd, 0x89, 0x59, 0x46, 0xeb, 0x57, 0x85, 0xc0, 0x68, 0x21, 0xbb, 0x90, 0xff,
	0x84, 0xb6, 0xe8, 0xcb, 0xd7, 0x61, 0xfc, 0x99, 0x84, 0x39, 0xe9, 0x14, 0x63, 0x98, 0x51, 0xfc,
	0xf0, 0xf1, 0x29, 0x86, 0x44, 0x0c, 0x43, 0xd3, 0xf2, 0xdd, 0x16, 0xe9, 0x09, 0x40, 0x52, 0x30,
	0x48, 0x1b, 0x87, 0xdc, 0x84, 0x54, 0x8b, 0xec, 0xd1, 0x96, 0xaf, 0xcd, 0xf2, 0xb4, 0x5a, 0x39,
	0xbb, 0xd1, 0xd2, 0x3d, 0x0e, 0xf8, 0xd4, 0x0e, 0xbc, 0x9e, 0x29, 0xd1, 0xf8, 0x55, 0x48, 0x76,
	0xbc, 0x16, 0x8f, 0x4e, 0xda, 0x64, 0x43, 0xfc, 0x3a, 0xa4, 0xda, 0x34, 0x38, 0x70, 0x9a, 0x5a,
	0x9e, 0x1b, 0xe5, 0x17, 0xbe, 0x03, 0x73, 0x07, 0x94, 0x34, 0xa9, 0xe7, 0x6b, 0x2b, 0x9c, 0x62,
	0x35, 0x86, 0xe2, 0x33, 0x81, 0x10, 0x1c, 0x21, 0x9e, 0xb9, 0xf4, 0x69, 0xc3, 0xa3, 0x81, 0x56,
	0x14, 0x2e, 0xc5, 0x17, 0xbe, 0x08, 0x73, 0x4d, 0xaf, 0x57, 0xf7, 0x3a, 0xb6, 0x56, 0x2d, 0xa0,
	0xe2, 0xbc, 0x99, 0x6a, 0x7a, 0x3d, 0xb3, 0x63, 0xeb, 0x77, 0x20, 0xa3, 0x88, 0x65, 0x22, 0x0f,
	0x69, 0x4f, 0x46, 0x8c, 0x0d, 0xd9, 0xcd, 0xec, 0x92, 0x56, 0x27, 0x8c, 0x95, 0xf8, 0xa8, 0x25,
	0x6e, 0x23, 0xfd, 0x3e, 0x64, 0x55, 0x11, 0x31, 0x6b, 0xd7, 0xd5, 0xb5, 0x99, 0xea, 0xa2, 0xb2,
	0x0d, 0xb1, 0x52, 0x71, 0x67, 0x7c, 0x00, 0x29, 0x61, 0xc4, 0x2b, 0x00, 0x0d, 0x8f, 0x32, 0xa4,
	0x45, 0xc2, 0x80, 0x29, 0x96, 0x81, 0xa4, 0xbc, 0x22, 0xc9, 0xf8, 0x03, 0x81, 0xae, 0x54, 0x82,
	0x6d, 0xa7, 0x65, 0x35, 0x2c, 0xfa, 0x62, 0x25, 0x6d, 0x0d, 0x5e, 0xe1, 0xa7, 0x57, 0xf7, 0x69,
	0x8b, 0x36, 0x02, 0xc7, 0x93, 0x29, 0x97, 0xe3, 0xd6, 0x07, 0xd2, 0x38, 0x49, 0xe5, 0xcb, 0x9c,
	0xaa, 0x7c, 0xc6, 0x31, 0x2c, 0xc7, 0xaa, 0x96, 0x65, 0xec, 0x06, 0xcc, 0xbb, 0xd2, 0x26, 0xcb,
	0x98, 0x76, 0x36, 0x19, 0xf8, 0xaa, 0x9e, 0xd9, 0x47, 0xc6, 0x15, 0xb3, 0xd9, 0xb8, 0x62, 0xf6,
	0x15, 0x5c, 0x1c, 0x14, 0x33, 0xe9, 0x65, 0xbc, 0x78, 0xad, 0x42, 0x86, 0xb3, 0xf5, 0xd4, 0x8b,
	0x04, 0xc2, 0xc4, 0x2f, 0x62, 0x1b, 0xf4, 0x48, 0x41, 0x9b, 0xc8, 0xfb, 0x75, 0x48, 0x09, 0x57,
	0x3c, 0x8d, 0xcf, 0xdb, 0xb3, 0xc4, 0x19, 0xcf, 0x11, 0xe8, 0x91, 0xd2, 0xf6, 0x22, 0xbb, 0x49,
	0x9e, 0xde, 0xcd, 0x14, 0x82, 0x1e, 0x83, 0x1e, 0x29, 0x71, 0x2f, 0x37, 0xba, 0xcf, 0x10, 0x68,
	0x3b, 0xd4, 0x9f, 0xea, 0xe8, 0x30, 0xcc, 0x74, 0x2d, 0x7a, 0x24, 0x33, 0x82, 0x8f, 0x23, 0x69,
	0x56, 0x1c, 0x37, 0xcd, 0x8c, 0xcf, 0x61, 0x29, 0x46, 0xc4, 0x74, 0x0d, 0xd8, 0xf8, 0x15, 0x41,
	0x2e, 0xe2, 0x09, 0x5f, 0x81, 0x99, 0x36, 0x0d, 0x88, 0xec, 0x6c, 0xaf, 0x85, 0xab, 0xf9, 0x43,
	0x87, 0xf9, 0xb8, 0x4f, 0x03, 0x62, 0x72, 0x08, 0x83, 0xee, 0x11, 0x9f, 0xf2, 0x87, 0x85, 0x02,
	0xed, 0x56, 0x4a, 0xc2, 0xd7, 0x26, 0xf1, 0xa9, 0xc9, 0x21, 0xf8, 0xb6, 0xa2, 0x6b, 0x89, 0xeb,
	0xba, 0x74, 0x56, 0xd7, 0x16, 0xaf, 0x35, 0xdf, 0x58, 0xd4, 0x53, 0x14, 0xae, 0xc3, 0xe2, 0x99,
	0xe9, 0x7e, 0x93, 0x81, 0x41, 0x93, 0xa9, 0xfe, 0x93, 0x01, 0x90, 0xc8, 0x8f, 0xb6, 0xb7, 0x70,
	0x0f, 0xb2, 0xea, 0x13, 0x05, 0xab, 0x1d, 0x23, 0xe6, 0xf5, 0xa5, 0xaf, 0x0e, 0x9d, 0x17, 0xa1,
	0x35, 0x8a, 0xdf, 0xff, 0xfb, 0xdf, 0x2f, 0x09, 0x03, 0x17, 0xd8, 0x9b, 0x8e, 0x1f, 0xac, 0x5f,
	0x3e, 0x1e, 0x1c, 0xf9, 0x49, 0xb9, 0xff, 0xaa, 0x39, 0x02, 0x18, 0x5c, 0x70, 0xac, 0x6e, 0xf4,
	0xcc, 0x23, 0x46, 0x8f, 0x39, 0x1e, 0xe3, 0x16, 0x67, 0xaa, 0xe0, 0xf2, 0x28, 0xa6, 0xf2, 0xb1,
	0xda, 0x99, 0x4f, 0xf0, 0x13, 0xc8, 0x45, 0xae, 0x3f, 0x56, 0x37, 0x15, 0xf7, 0xd2, 0x89, 0xa5,
	0xbf, 0xca, 0xe9, 0xd7, 0x6a, 0x68, 0xc3, 0x18, 0xbd, 0xd7, 0xef, 0x10, 0xe4, 0x22, 0x25, 0x20,
	0xc2, 0x19, 0xf7, 0xee, 0x89, 0xe5, 0xac, 0x71, 0xce, 0x1b, 0x35, 0xb4, 0x51, 0x9d, 0x78, 0xd7,
	0x27, 0x90, 0x8b, 0x5c, 0xfa, 0x88, 0x82, 0xb8, 0x17, 0xcf, 0x79, 0x41, 0xdf, 0x98, 0x98, 0xfe,
	0x39, 0x12, 0x99, 0x16, 0x76, 0x11, 0xbc, 0x16, 0x9f, 0x49, 0xa7, 0x7a, 0xa3, 0x7e, 0x79, 0x14,
	0x4c, 0xe6, 0x5d, 0x99, 0x0b, 0xbb, 0x82, 0xd7, 0x47, 0x08, 0xeb, 0xf3, 0xff, 0x88, 0x20, 0x7d,
	0x97, 0x06, 0xf2, 0x3e, 0x1b, 0xb1, 0xe9, 0x17, 0xa9, 0x5d, 0xfa, 0xd0, 0xb2, 0x63, 0xbc, 0xcf,
	0xc9, 0x6f, 0xe1, 0x77, 0xc7, 0x24, 0x2f, 0x1f, 0x2b, 0x25, 0xf4, 0x04, 0x3f, 0x43, 0x90, 0x15,
	0x79, 0x27, 0xd5, 0xac, 0x0d, 0x4b, 0xc8, 0x71, 0x05, 0x55, 0xb9, 0xa0, 0x6b, 0x2c, 0x39, 0xc7,
	0x0e, 0xc8, 0xcf, 0x08, 0xb2, 0x22, 0x13, 0x63, 0x54, 0x0c, 0xef, 0x5f, 0xe7, 0xa8, 0xf8, 0x90,
	0xab, 0xa8, 0xd5, 0xd0, 0x86, 0x3e, 0x65, 0x64, 0x58, 0xd6, 0x88, 0xdc, 0x8c, 0xd1, 0x34, 0xbc,
	0x87, 0x8d, 0x3e, 0xaa, 0x8d, 0x29, 0x05, 0xfd, 0x84, 0x00, 0x58, 0x5f, 0x91, 0x72, 0xde, 0x52,
	0x78, 0x86, 0xf5, 0x3c, 0xfd, 0xed, 0xf3, 0x41, 0x32, 0x81, 0x6f, 0x72, 0x61, 0xd7, 0xd9, 0x91,
	0x5d, 0x1d, 0x75, 0xb9, 0x6a, 0x41, 0x5f, 0xc2, 0xe6, 0x0e, 0xe4, 0x1a, 0x4e, 0x7b, 0x40, 0xb1,
	0xb9, 0x10, 0x96, 0x77, 0xd7, 0xda, 0x66, 0x7f, 0xd2, 0xdb, 0xe8, 0x6b, 0xdc, 0xff, 0xcd, 0x7e,
	0x4f, 0x8c, 0xba, 0x95, 0xdf, 0x12, 0xc9, 0xad, 0xdd, 0xdd, 0xdf, 0x13, 0xe9, 0x2d, 0xb1, 0xf0,
	0x51, 0xe5, 0xef, 0x70, 0xfc, 0xf8, 0x51, 0x65, 0x2f, 0xc5, 0x7f, 0xc2, 0xdf, 0xf9, 0x3f, 0x00,
	0x00, 0xff, 0xff, 0x51, 0x76, 0x8f, 0x11, 0x08, 0x10, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WebhookAPIClient is the client API for WebhookAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WebhookAPIClient interface {
	ListWebhooks(ctx context.Context, in *ListWebhooksRequest, opts ...grpc.CallOption) (*ListWebhooksResponse, error)
	// Retrieve specified Webhook by name.
	GetWebhook(ctx context.Context, in *GetWebhookRequest, opts ...grpc.CallOption) (*Webhook, error)
	// Create a new Webhook.
	CreateWebhook(ctx context.Context, in *CreateWebhookRequest, opts ...grpc.CallOption) (*Webhook, error)
	// Update configuration of a Webhook.
	UpdateWebhook(ctx context.Context, in *UpdateWebhookRequest, opts ...grpc.CallOption) (*Webhook, error)
	// Permanently destroy a Webhook.
	DeleteWebhook(ctx context.Context, in *DeleteWebhookRequest, opts ...grpc.CallOption) (*Webhook, error)
	// List the WebhookPolicies in the given space.
	ListPolicies(ctx context.Context, in *ListWebhookPoliciesRequest, opts ...grpc.CallOption) (*ListWebhookPoliciesResponse, error)
	// Retrieve specified WebhookPolicy by name and Space.
	GetPolicy(ctx context.Context, in *GetWebhookPolicyRequest, opts ...grpc.CallOption) (*WebhookPolicy, error)
	// Create a new WebhookPolicy within a space.
	CreatePolicy(ctx context.Context, in *CreateWebhookPolicyRequest, opts ...grpc.CallOption) (*WebhookPolicy, error)
	// Update an existing WebhookPolicy.
	UpdatePolicy(ctx context.Context, in *UpdateWebhookPolicyRequest, opts ...grpc.CallOption) (*WebhookPolicy, error)
	// Permanently destroy a WebhookPolicy.
	DeletePolicy(ctx context.Context, in *DeleteWebhookPolicyRequest, opts ...grpc.CallOption) (*WebhookPolicy, error)
	// Test how WebhookPolicies apply to Webhooks.
	TestPolicy(ctx context.Context, in *TestWebhookPolicyRequest, opts ...grpc.CallOption) (*TestWebhookPolicyResponse, error)
}

type webhookAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewWebhookAPIClient(cc grpc.ClientConnInterface) WebhookAPIClient {
	return &webhookAPIClient{cc}
}

func (c *webhookAPIClient) ListWebhooks(ctx context.Context, in *ListWebhooksRequest, opts ...grpc.CallOption) (*ListWebhooksResponse, error) {
	out := new(ListWebhooksResponse)
	err := c.cc.Invoke(ctx, "/indent.v1.WebhookAPI/ListWebhooks", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webhookAPIClient) GetWebhook(ctx context.Context, in *GetWebhookRequest, opts ...grpc.CallOption) (*Webhook, error) {
	out := new(Webhook)
	err := c.cc.Invoke(ctx, "/indent.v1.WebhookAPI/GetWebhook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webhookAPIClient) CreateWebhook(ctx context.Context, in *CreateWebhookRequest, opts ...grpc.CallOption) (*Webhook, error) {
	out := new(Webhook)
	err := c.cc.Invoke(ctx, "/indent.v1.WebhookAPI/CreateWebhook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webhookAPIClient) UpdateWebhook(ctx context.Context, in *UpdateWebhookRequest, opts ...grpc.CallOption) (*Webhook, error) {
	out := new(Webhook)
	err := c.cc.Invoke(ctx, "/indent.v1.WebhookAPI/UpdateWebhook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webhookAPIClient) DeleteWebhook(ctx context.Context, in *DeleteWebhookRequest, opts ...grpc.CallOption) (*Webhook, error) {
	out := new(Webhook)
	err := c.cc.Invoke(ctx, "/indent.v1.WebhookAPI/DeleteWebhook", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webhookAPIClient) ListPolicies(ctx context.Context, in *ListWebhookPoliciesRequest, opts ...grpc.CallOption) (*ListWebhookPoliciesResponse, error) {
	out := new(ListWebhookPoliciesResponse)
	err := c.cc.Invoke(ctx, "/indent.v1.WebhookAPI/ListPolicies", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webhookAPIClient) GetPolicy(ctx context.Context, in *GetWebhookPolicyRequest, opts ...grpc.CallOption) (*WebhookPolicy, error) {
	out := new(WebhookPolicy)
	err := c.cc.Invoke(ctx, "/indent.v1.WebhookAPI/GetPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webhookAPIClient) CreatePolicy(ctx context.Context, in *CreateWebhookPolicyRequest, opts ...grpc.CallOption) (*WebhookPolicy, error) {
	out := new(WebhookPolicy)
	err := c.cc.Invoke(ctx, "/indent.v1.WebhookAPI/CreatePolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webhookAPIClient) UpdatePolicy(ctx context.Context, in *UpdateWebhookPolicyRequest, opts ...grpc.CallOption) (*WebhookPolicy, error) {
	out := new(WebhookPolicy)
	err := c.cc.Invoke(ctx, "/indent.v1.WebhookAPI/UpdatePolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webhookAPIClient) DeletePolicy(ctx context.Context, in *DeleteWebhookPolicyRequest, opts ...grpc.CallOption) (*WebhookPolicy, error) {
	out := new(WebhookPolicy)
	err := c.cc.Invoke(ctx, "/indent.v1.WebhookAPI/DeletePolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *webhookAPIClient) TestPolicy(ctx context.Context, in *TestWebhookPolicyRequest, opts ...grpc.CallOption) (*TestWebhookPolicyResponse, error) {
	out := new(TestWebhookPolicyResponse)
	err := c.cc.Invoke(ctx, "/indent.v1.WebhookAPI/TestPolicy", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WebhookAPIServer is the server API for WebhookAPI service.
type WebhookAPIServer interface {
	ListWebhooks(context.Context, *ListWebhooksRequest) (*ListWebhooksResponse, error)
	// Retrieve specified Webhook by name.
	GetWebhook(context.Context, *GetWebhookRequest) (*Webhook, error)
	// Create a new Webhook.
	CreateWebhook(context.Context, *CreateWebhookRequest) (*Webhook, error)
	// Update configuration of a Webhook.
	UpdateWebhook(context.Context, *UpdateWebhookRequest) (*Webhook, error)
	// Permanently destroy a Webhook.
	DeleteWebhook(context.Context, *DeleteWebhookRequest) (*Webhook, error)
	// List the WebhookPolicies in the given space.
	ListPolicies(context.Context, *ListWebhookPoliciesRequest) (*ListWebhookPoliciesResponse, error)
	// Retrieve specified WebhookPolicy by name and Space.
	GetPolicy(context.Context, *GetWebhookPolicyRequest) (*WebhookPolicy, error)
	// Create a new WebhookPolicy within a space.
	CreatePolicy(context.Context, *CreateWebhookPolicyRequest) (*WebhookPolicy, error)
	// Update an existing WebhookPolicy.
	UpdatePolicy(context.Context, *UpdateWebhookPolicyRequest) (*WebhookPolicy, error)
	// Permanently destroy a WebhookPolicy.
	DeletePolicy(context.Context, *DeleteWebhookPolicyRequest) (*WebhookPolicy, error)
	// Test how WebhookPolicies apply to Webhooks.
	TestPolicy(context.Context, *TestWebhookPolicyRequest) (*TestWebhookPolicyResponse, error)
}

// UnimplementedWebhookAPIServer can be embedded to have forward compatible implementations.
type UnimplementedWebhookAPIServer struct {
}

func (*UnimplementedWebhookAPIServer) ListWebhooks(ctx context.Context, req *ListWebhooksRequest) (*ListWebhooksResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListWebhooks not implemented")
}
func (*UnimplementedWebhookAPIServer) GetWebhook(ctx context.Context, req *GetWebhookRequest) (*Webhook, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWebhook not implemented")
}
func (*UnimplementedWebhookAPIServer) CreateWebhook(ctx context.Context, req *CreateWebhookRequest) (*Webhook, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWebhook not implemented")
}
func (*UnimplementedWebhookAPIServer) UpdateWebhook(ctx context.Context, req *UpdateWebhookRequest) (*Webhook, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWebhook not implemented")
}
func (*UnimplementedWebhookAPIServer) DeleteWebhook(ctx context.Context, req *DeleteWebhookRequest) (*Webhook, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWebhook not implemented")
}
func (*UnimplementedWebhookAPIServer) ListPolicies(ctx context.Context, req *ListWebhookPoliciesRequest) (*ListWebhookPoliciesResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPolicies not implemented")
}
func (*UnimplementedWebhookAPIServer) GetPolicy(ctx context.Context, req *GetWebhookPolicyRequest) (*WebhookPolicy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPolicy not implemented")
}
func (*UnimplementedWebhookAPIServer) CreatePolicy(ctx context.Context, req *CreateWebhookPolicyRequest) (*WebhookPolicy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePolicy not implemented")
}
func (*UnimplementedWebhookAPIServer) UpdatePolicy(ctx context.Context, req *UpdateWebhookPolicyRequest) (*WebhookPolicy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdatePolicy not implemented")
}
func (*UnimplementedWebhookAPIServer) DeletePolicy(ctx context.Context, req *DeleteWebhookPolicyRequest) (*WebhookPolicy, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeletePolicy not implemented")
}
func (*UnimplementedWebhookAPIServer) TestPolicy(ctx context.Context, req *TestWebhookPolicyRequest) (*TestWebhookPolicyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TestPolicy not implemented")
}

func RegisterWebhookAPIServer(s *grpc.Server, srv WebhookAPIServer) {
	s.RegisterService(&_WebhookAPI_serviceDesc, srv)
}

func _WebhookAPI_ListWebhooks_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWebhooksRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookAPIServer).ListWebhooks(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/indent.v1.WebhookAPI/ListWebhooks",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookAPIServer).ListWebhooks(ctx, req.(*ListWebhooksRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebhookAPI_GetWebhook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWebhookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookAPIServer).GetWebhook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/indent.v1.WebhookAPI/GetWebhook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookAPIServer).GetWebhook(ctx, req.(*GetWebhookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebhookAPI_CreateWebhook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWebhookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookAPIServer).CreateWebhook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/indent.v1.WebhookAPI/CreateWebhook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookAPIServer).CreateWebhook(ctx, req.(*CreateWebhookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebhookAPI_UpdateWebhook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWebhookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookAPIServer).UpdateWebhook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/indent.v1.WebhookAPI/UpdateWebhook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookAPIServer).UpdateWebhook(ctx, req.(*UpdateWebhookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebhookAPI_DeleteWebhook_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteWebhookRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookAPIServer).DeleteWebhook(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/indent.v1.WebhookAPI/DeleteWebhook",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookAPIServer).DeleteWebhook(ctx, req.(*DeleteWebhookRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebhookAPI_ListPolicies_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ListWebhookPoliciesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookAPIServer).ListPolicies(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/indent.v1.WebhookAPI/ListPolicies",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookAPIServer).ListPolicies(ctx, req.(*ListWebhookPoliciesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebhookAPI_GetPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWebhookPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookAPIServer).GetPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/indent.v1.WebhookAPI/GetPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookAPIServer).GetPolicy(ctx, req.(*GetWebhookPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebhookAPI_CreatePolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWebhookPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookAPIServer).CreatePolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/indent.v1.WebhookAPI/CreatePolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookAPIServer).CreatePolicy(ctx, req.(*CreateWebhookPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebhookAPI_UpdatePolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWebhookPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookAPIServer).UpdatePolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/indent.v1.WebhookAPI/UpdatePolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookAPIServer).UpdatePolicy(ctx, req.(*UpdateWebhookPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebhookAPI_DeletePolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteWebhookPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookAPIServer).DeletePolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/indent.v1.WebhookAPI/DeletePolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookAPIServer).DeletePolicy(ctx, req.(*DeleteWebhookPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WebhookAPI_TestPolicy_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TestWebhookPolicyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WebhookAPIServer).TestPolicy(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/indent.v1.WebhookAPI/TestPolicy",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WebhookAPIServer).TestPolicy(ctx, req.(*TestWebhookPolicyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WebhookAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "indent.v1.WebhookAPI",
	HandlerType: (*WebhookAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListWebhooks",
			Handler:    _WebhookAPI_ListWebhooks_Handler,
		},
		{
			MethodName: "GetWebhook",
			Handler:    _WebhookAPI_GetWebhook_Handler,
		},
		{
			MethodName: "CreateWebhook",
			Handler:    _WebhookAPI_CreateWebhook_Handler,
		},
		{
			MethodName: "UpdateWebhook",
			Handler:    _WebhookAPI_UpdateWebhook_Handler,
		},
		{
			MethodName: "DeleteWebhook",
			Handler:    _WebhookAPI_DeleteWebhook_Handler,
		},
		{
			MethodName: "ListPolicies",
			Handler:    _WebhookAPI_ListPolicies_Handler,
		},
		{
			MethodName: "GetPolicy",
			Handler:    _WebhookAPI_GetPolicy_Handler,
		},
		{
			MethodName: "CreatePolicy",
			Handler:    _WebhookAPI_CreatePolicy_Handler,
		},
		{
			MethodName: "UpdatePolicy",
			Handler:    _WebhookAPI_UpdatePolicy_Handler,
		},
		{
			MethodName: "DeletePolicy",
			Handler:    _WebhookAPI_DeletePolicy_Handler,
		},
		{
			MethodName: "TestPolicy",
			Handler:    _WebhookAPI_TestPolicy_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "indent/v1/webhook_api.proto",
}
