// Code generated by protoc-gen-zap-marshaler. DO NOT EDIT.
// Generated conservatively: no ObjectMarshaler implementations for messages
// without any logged fields.

package indentv1

import (
	zapcore "go.uber.org/zap/zapcore"
)

func (m *Failure) MarshalLogObject(oe zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	keyName = "Status" // field status = 3
	if m.Status != nil {
		var vv interface{} = m.Status
		if marshaler, ok := vv.(zapcore.ObjectMarshaler); ok {
			oe.AddObject(keyName, marshaler)
		}
	}

	keyName = "Install" // field install = 7
	if m.Install != nil {
		var vv interface{} = m.Install
		if marshaler, ok := vv.(zapcore.ObjectMarshaler); ok {
			oe.AddObject(keyName, marshaler)
		}
	}

	return nil
}

func (m *ListFailuresRequest) MarshalLogObject(oe zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	keyName = "SpaceName" // field spaceName = 1
	oe.AddString(keyName, m.SpaceName)

	return nil
}

func (m *Install) MarshalLogObject(oe zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	keyName = "Meta" // field meta = 3
	if m.Meta != nil {
		var vv interface{} = m.Meta
		if marshaler, ok := vv.(zapcore.ObjectMarshaler); ok {
			oe.AddObject(keyName, marshaler)
		}
	}

	keyName = "IntegrationName" // field integrationName = 5
	oe.AddString(keyName, m.IntegrationName)

	keyName = "Capabilities" // field capabilities = 7
	if m.Capabilities != nil {
		var vv interface{} = m.Capabilities
		if marshaler, ok := vv.(zapcore.ObjectMarshaler); ok {
			oe.AddObject(keyName, marshaler)
		}
	}

	keyName = "Disabled" // field disabled = 9
	oe.AddBool(keyName, m.Disabled)

	keyName = "Status" // field status = 15
	oe.AddString(keyName, m.Status)

	keyName = "LastSuccess" // field lastSuccess = 17
	t := m.LastSuccess.AsTime()
	oe.AddTime(keyName, t)

	keyName = "TenantId" // field tenantId = 19
	oe.AddString(keyName, m.TenantId)

	keyName = "CredentialName" // field credentialName = 21
	oe.AddString(keyName, m.CredentialName)

	keyName = "Integration" // field integration = 99
	if m.Integration != nil {
		var vv interface{} = m.Integration
		if marshaler, ok := vv.(zapcore.ObjectMarshaler); ok {
			oe.AddObject(keyName, marshaler)
		}
	}

	return nil
}

func (m *ListInstallsRequest) MarshalLogObject(oe zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	keyName = "SpaceName" // field spaceName = 1
	oe.AddString(keyName, m.SpaceName)

	keyName = "LabelSelector" // field labelSelector = 2
	oe.AddString(keyName, m.LabelSelector)

	keyName = "Kinds" // field kinds = 4
	oe.AddArray(keyName, zapcore.ArrayMarshalerFunc(func(ae zapcore.ArrayEncoder) error {
		for _, rv := range m.Kinds {
			ae.AppendString(rv)
		}
		return nil
	}))

	keyName = "Capabilities" // field capabilities = 7
	oe.AddArray(keyName, zapcore.ArrayMarshalerFunc(func(ae zapcore.ArrayEncoder) error {
		for _, rv := range m.Capabilities {
			ae.AppendString(rv)
		}
		return nil
	}))

	return nil
}

func (m *ListInstallsResponse) MarshalLogObject(oe zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	keyName = "NextPageToken" // field nextPageToken = 2
	oe.AddString(keyName, m.NextPageToken)

	return nil
}

func (m *GetInstallRequest) MarshalLogObject(oe zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	keyName = "SpaceName" // field spaceName = 5
	oe.AddString(keyName, m.SpaceName)

	keyName = "InstallName" // field installName = 9
	oe.AddString(keyName, m.InstallName)

	return nil
}

func (m *ToggleInstallRequest) MarshalLogObject(oe zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	keyName = "SpaceName" // field spaceName = 1
	oe.AddString(keyName, m.SpaceName)

	keyName = "InstallName" // field installName = 2
	oe.AddString(keyName, m.InstallName)

	return nil
}

func (m *DeleteInstallRequest) MarshalLogObject(oe zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	keyName = "SpaceName" // field spaceName = 5
	oe.AddString(keyName, m.SpaceName)

	keyName = "InstallName" // field installName = 9
	oe.AddString(keyName, m.InstallName)

	return nil
}
