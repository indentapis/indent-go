// Code generated by protoc-gen-go. DO NOT EDIT.
// source: indent/v1/prompt_api.proto

package indentv1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
	v1 "multiparty.ai/api/multiparty/prompt/v1"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

func init() {
	proto.RegisterFile("indent/v1/prompt_api.proto", fileDescriptor_7dce5568995a6913)
}

var fileDescriptor_7dce5568995a6913 = []byte{
	// 339 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x92, 0xcf, 0x4a, 0x2b, 0x31,
	0x14, 0x87, 0xc9, 0xe5, 0x22, 0x34, 0x55, 0x17, 0x59, 0x0e, 0x82, 0xb4, 0x48, 0xff, 0x2d, 0x12,
	0x46, 0xe9, 0xa6, 0x6e, 0xb4, 0x2e, 0x44, 0x70, 0x31, 0x74, 0xe9, 0xa6, 0xc4, 0x7a, 0x28, 0x81,
	0x99, 0x24, 0x4e, 0xd2, 0x81, 0x52, 0xdc, 0xb8, 0xd5, 0x8d, 0xf8, 0x0a, 0xbe, 0x91, 0x8f, 0xa0,
	0x0f, 0x22, 0x4d, 0xd2, 0x76, 0x84, 0xca, 0x74, 0x35, 0x93, 0x33, 0x5f, 0xce, 0xf9, 0x38, 0xf3,
	0xc3, 0x91, 0x90, 0x0f, 0x20, 0x2d, 0x2b, 0x62, 0xa6, 0x73, 0x95, 0x69, 0x3b, 0xe6, 0x5a, 0x50,
	0x9d, 0x2b, 0xab, 0x48, 0xcd, 0x7f, 0xa3, 0x45, 0x1c, 0x1d, 0x4d, 0x95, 0x9a, 0xa6, 0xc0, 0xb8,
	0x16, 0x8c, 0x4b, 0xa9, 0x2c, 0xb7, 0x42, 0x49, 0xe3, 0xc1, 0xa8, 0x91, 0xcd, 0x52, 0x2b, 0x34,
	0xcf, 0xed, 0x3c, 0x74, 0xd9, 0xf4, 0xf3, 0xc8, 0xe9, 0xd7, 0x7f, 0x5c, 0x4b, 0x5c, 0xe1, 0x32,
	0xb9, 0x21, 0x6f, 0x08, 0xef, 0x5f, 0xe5, 0xc0, 0x2d, 0xf8, 0x1a, 0xe9, 0xd2, 0x4d, 0x0b, 0x1a,
	0x2e, 0x16, 0x31, 0x2d, 0x33, 0x23, 0x78, 0x9c, 0x81, 0xb1, 0x51, 0x6f, 0x17, 0xd4, 0x68, 0x25,
	0x0d, 0x34, 0x7b, 0xcf, 0x9f, 0xdf, 0xef, 0xff, 0x4e, 0x06, 0xa8, 0xd7, 0x3c, 0x5e, 0x2a, 0x19,
	0xcd, 0x27, 0x60, 0xd8, 0xc2, 0x3d, 0xc7, 0x92, 0x67, 0xf0, 0x14, 0x34, 0x0d, 0x79, 0x41, 0xb8,
	0x7e, 0x2b, 0x8c, 0x4d, 0xc2, 0xb9, 0xb3, 0x7d, 0x4e, 0x09, 0x59, 0x19, 0x75, 0x77, 0x20, 0x83,
	0x50, 0xdb, 0x09, 0x35, 0x48, 0xa5, 0xcd, 0x2b, 0xc2, 0xb5, 0x6b, 0x08, 0xf7, 0x49, 0x6b, 0xfb,
	0x84, 0x35, 0xb0, 0x32, 0x69, 0x57, 0x72, 0xc1, 0x83, 0x3a, 0x8f, 0x0e, 0x69, 0x55, 0x78, 0xb0,
	0x85, 0x3b, 0x92, 0x0f, 0x84, 0xeb, 0x7e, 0xc3, 0x23, 0xd0, 0xe9, 0xfc, 0xaf, 0xe5, 0x94, 0x90,
	0x8a, 0xe5, 0xfc, 0x22, 0x83, 0xd4, 0x85, 0x93, 0x1a, 0x2c, 0xff, 0x56, 0xbf, 0xd2, 0x2b, 0xa4,
	0xd5, 0x57, 0x73, 0xd0, 0xa9, 0x00, 0x33, 0xec, 0xe3, 0x83, 0x89, 0xca, 0xe8, 0x3a, 0xb7, 0xc3,
	0xc3, 0x90, 0x39, 0x2d, 0x92, 0x65, 0x0c, 0x13, 0x74, 0x47, 0xd6, 0x81, 0x3f, 0xf7, 0x6f, 0x45,
	0x7c, 0xbf, 0xe7, 0x32, 0x7a, 0xf6, 0x13, 0x00, 0x00, 0xff, 0xff, 0x76, 0xa3, 0x40, 0x2f, 0x0d,
	0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// PromptAPIClient is the client API for PromptAPI service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PromptAPIClient interface {
	// Create a new prompt.
	CreatePrompt(ctx context.Context, in *v1.CreatePromptRequest, opts ...grpc.CallOption) (*v1.CreatePromptResponse, error)
	ListPrompts(ctx context.Context, in *v1.ListPromptsRequest, opts ...grpc.CallOption) (*v1.ListPromptsResponse, error)
	GetPrompt(ctx context.Context, in *v1.GetPromptRequest, opts ...grpc.CallOption) (*v1.GetPromptResponse, error)
	CreateReply(ctx context.Context, in *v1.CreateReplyRequest, opts ...grpc.CallOption) (*v1.CreateReplyResponse, error)
}

type promptAPIClient struct {
	cc grpc.ClientConnInterface
}

func NewPromptAPIClient(cc grpc.ClientConnInterface) PromptAPIClient {
	return &promptAPIClient{cc}
}

func (c *promptAPIClient) CreatePrompt(ctx context.Context, in *v1.CreatePromptRequest, opts ...grpc.CallOption) (*v1.CreatePromptResponse, error) {
	out := new(v1.CreatePromptResponse)
	err := c.cc.Invoke(ctx, "/indent.v1.PromptAPI/CreatePrompt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promptAPIClient) ListPrompts(ctx context.Context, in *v1.ListPromptsRequest, opts ...grpc.CallOption) (*v1.ListPromptsResponse, error) {
	out := new(v1.ListPromptsResponse)
	err := c.cc.Invoke(ctx, "/indent.v1.PromptAPI/ListPrompts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promptAPIClient) GetPrompt(ctx context.Context, in *v1.GetPromptRequest, opts ...grpc.CallOption) (*v1.GetPromptResponse, error) {
	out := new(v1.GetPromptResponse)
	err := c.cc.Invoke(ctx, "/indent.v1.PromptAPI/GetPrompt", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *promptAPIClient) CreateReply(ctx context.Context, in *v1.CreateReplyRequest, opts ...grpc.CallOption) (*v1.CreateReplyResponse, error) {
	out := new(v1.CreateReplyResponse)
	err := c.cc.Invoke(ctx, "/indent.v1.PromptAPI/CreateReply", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PromptAPIServer is the server API for PromptAPI service.
type PromptAPIServer interface {
	// Create a new prompt.
	CreatePrompt(context.Context, *v1.CreatePromptRequest) (*v1.CreatePromptResponse, error)
	ListPrompts(context.Context, *v1.ListPromptsRequest) (*v1.ListPromptsResponse, error)
	GetPrompt(context.Context, *v1.GetPromptRequest) (*v1.GetPromptResponse, error)
	CreateReply(context.Context, *v1.CreateReplyRequest) (*v1.CreateReplyResponse, error)
}

// UnimplementedPromptAPIServer can be embedded to have forward compatible implementations.
type UnimplementedPromptAPIServer struct {
}

func (*UnimplementedPromptAPIServer) CreatePrompt(ctx context.Context, req *v1.CreatePromptRequest) (*v1.CreatePromptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreatePrompt not implemented")
}
func (*UnimplementedPromptAPIServer) ListPrompts(ctx context.Context, req *v1.ListPromptsRequest) (*v1.ListPromptsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ListPrompts not implemented")
}
func (*UnimplementedPromptAPIServer) GetPrompt(ctx context.Context, req *v1.GetPromptRequest) (*v1.GetPromptResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetPrompt not implemented")
}
func (*UnimplementedPromptAPIServer) CreateReply(ctx context.Context, req *v1.CreateReplyRequest) (*v1.CreateReplyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateReply not implemented")
}

func RegisterPromptAPIServer(s *grpc.Server, srv PromptAPIServer) {
	s.RegisterService(&_PromptAPI_serviceDesc, srv)
}

func _PromptAPI_CreatePrompt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.CreatePromptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromptAPIServer).CreatePrompt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/indent.v1.PromptAPI/CreatePrompt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromptAPIServer).CreatePrompt(ctx, req.(*v1.CreatePromptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromptAPI_ListPrompts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.ListPromptsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromptAPIServer).ListPrompts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/indent.v1.PromptAPI/ListPrompts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromptAPIServer).ListPrompts(ctx, req.(*v1.ListPromptsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromptAPI_GetPrompt_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.GetPromptRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromptAPIServer).GetPrompt(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/indent.v1.PromptAPI/GetPrompt",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromptAPIServer).GetPrompt(ctx, req.(*v1.GetPromptRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PromptAPI_CreateReply_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(v1.CreateReplyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PromptAPIServer).CreateReply(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/indent.v1.PromptAPI/CreateReply",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PromptAPIServer).CreateReply(ctx, req.(*v1.CreateReplyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PromptAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "indent.v1.PromptAPI",
	HandlerType: (*PromptAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreatePrompt",
			Handler:    _PromptAPI_CreatePrompt_Handler,
		},
		{
			MethodName: "ListPrompts",
			Handler:    _PromptAPI_ListPrompts_Handler,
		},
		{
			MethodName: "GetPrompt",
			Handler:    _PromptAPI_GetPrompt_Handler,
		},
		{
			MethodName: "CreateReply",
			Handler:    _PromptAPI_CreateReply_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "indent/v1/prompt_api.proto",
}
