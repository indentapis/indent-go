// Code generated by protoc-gen-zap-marshaler. DO NOT EDIT.
// Generated conservatively: no ObjectMarshaler implementations for messages
// without any logged fields.

package indentv1

import (
	zapcore "go.uber.org/zap/zapcore"
)

func (m *Petition) MarshalLogObject(oe zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	keyName = "Name" // field name = 1
	oe.AddString(keyName, m.Name)

	keyName = "SpaceName" // field spaceName = 5
	oe.AddString(keyName, m.SpaceName)

	keyName = "Petitioners" // field petitioners = 9
	oe.AddArray(keyName, zapcore.ArrayMarshalerFunc(func(ae zapcore.ArrayEncoder) error {
		for _, rv := range m.Petitioners {
			if rv != nil {
				var vv interface{} = rv
				if marshaler, ok := vv.(zapcore.ObjectMarshaler); ok {
					ae.AppendObject(marshaler)
				}
			}
		}
		return nil
	}))

	keyName = "Resources" // field resources = 11
	oe.AddArray(keyName, zapcore.ArrayMarshalerFunc(func(ae zapcore.ArrayEncoder) error {
		for _, rv := range m.Resources {
			if rv != nil {
				var vv interface{} = rv
				if marshaler, ok := vv.(zapcore.ObjectMarshaler); ok {
					ae.AppendObject(marshaler)
				}
			}
		}
		return nil
	}))

	keyName = "State" // field state = 30
	if m.State != nil {
		var vv interface{} = m.State
		if marshaler, ok := vv.(zapcore.ObjectMarshaler); ok {
			oe.AddObject(keyName, marshaler)
		}
	}

	keyName = "Block" // field block = 50
	if m.Block != nil {
		var vv interface{} = m.Block
		if marshaler, ok := vv.(zapcore.ObjectMarshaler); ok {
			oe.AddObject(keyName, marshaler)
		}
	}

	return nil
}

func (m *PetitionState) MarshalLogObject(oe zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	keyName = "Status" // field status = 10
	if m.Status != nil {
		var vv interface{} = m.Status
		if marshaler, ok := vv.(zapcore.ObjectMarshaler); ok {
			oe.AddObject(keyName, marshaler)
		}
	}

	return nil
}

func (m *PetitionStatus) MarshalLogObject(oe zapcore.ObjectEncoder) error {
	var keyName string
	_ = keyName

	if m == nil {
		return nil
	}

	keyName = "Phase" // field phase = 10
	oe.AddString(keyName, m.Phase)

	return nil
}
